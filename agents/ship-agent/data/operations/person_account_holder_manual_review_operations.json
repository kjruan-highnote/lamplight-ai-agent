{
  "collection": "Person Account Holder Manual Review",
  "program_type": "person_account_holder_manual_review",
  "extraction_date": "2025-08-12T17:46:30.854Z",
  "total_operations": 12,
  "categories": [
    {
      "name": "uncategorized",
      "operations": [
        {
          "name": "CreateUSPersonAccountHolderInManualReview",
          "type": "mutation",
          "required": true
        },
        {
          "name": "CreateUSPersonAccountHolderCardProductApplication",
          "type": "mutation",
          "required": true
        },
        {
          "name": "GetDocumentUploadSessionsViaApplicationID",
          "type": "query",
          "required": true
        },
        {
          "name": "GenerateDocumentUploadClientToken",
          "type": "mutation",
          "required": false
        },
        {
          "name": "StartDocumentUploadSession",
          "type": "mutation",
          "required": false
        },
        {
          "name": "CreateDocumentUploadSecureLink",
          "type": "mutation",
          "required": true
        },
        {
          "name": "EndDocumentUploadSession",
          "type": "mutation",
          "required": false
        },
        {
          "name": "GetDocumentUploadSession",
          "type": "query",
          "required": true
        },
        {
          "name": "SimulateApplicationDocumentReview",
          "type": "mutation",
          "required": false
        },
        {
          "name": "SimulateCreateApplicationDocumentsUploadSessions",
          "type": "mutation",
          "required": false
        },
        {
          "name": "SimulateApplicationVerificationStatusChange",
          "type": "mutation",
          "required": false
        },
        {
          "name": "SimulateApplicationStatusChange",
          "type": "mutation",
          "required": false
        }
      ]
    }
  ],
  "operations": [
    {
      "name": "CreateUSPersonAccountHolderInManualReview",
      "type": "mutation",
      "required": true,
      "graphql": "mutation CreateUSPersonAccountHolderInManualReview(\n  $input: CreateUSPersonAccountHolderInput!\n) {\n  createUSPersonAccountHolder(input: $input) {\n    __typename\n    ... on USPersonAccountHolder {\n      id\n      email\n      dateOfBirth\n      externalId\n      updatedAt\n      createdAt\n      name {\n        givenName\n        familyName\n        title\n        suffix\n        middleName\n      }\n      billingAddress {\n        streetAddress\n        extendedAddress\n        postalCode\n        region\n        locality\n        countryCodeAlpha3\n      }\n      phoneNumbers {\n        countryCode\n        number\n        label\n      }\n      identificationDocument {\n        socialSecurityNumber {\n          numberHash\n          countryCodeAlpha3\n        }\n      }\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "personAccountHolder": {
            "email": "foo@example.com",
            "name": {
              "givenName": "IN-REVIEW",
              "familyName": "IN-REVIEW"
            },
            "billingAddress": {
              "streetAddress": "123 Manual Review St.",
              "postalCode": "60654",
              "locality": "Chicago",
              "region": "IL",
              "countryCodeAlpha3": "USA"
            },
            "phoneNumber": {
              "countryCode": "1",
              "number": "5555555555",
              "label": "MOBILE",
              "extension": "312"
            },
            "identificationDocument": {
              "socialSecurityNumber": {
                "number": "111-11-1111",
                "countryCodeAlpha3": "USA"
              }
            },
            "dateOfBirth": "1980-12-12",
            "externalId": "some-id"
          }
        }
      }
    },
    {
      "name": "CreateUSPersonAccountHolderCardProductApplication",
      "type": "mutation",
      "required": true,
      "graphql": "mutation CreateUSPersonAccountHolderCardProductApplication($input: CreateAccountHolderCardProductApplicationInput!) {\n  createAccountHolderCardProductApplication(input: $input) {\n    __typename\n      ... on AccountHolderCardProductApplication {\n      id\n      applicationState {\n        status\n      }\n      cardProduct {\n        id\n      }  \n      accountHolderSnapshot {\n        ... on USPersonAccountHolderSnapshot {\n          accountHolderCurrent {\n            id\n          }\n          name {\n            givenName\n            familyName\n          }\n          billingAddress {\n            streetAddress\n            locality\n            region\n            countryCodeAlpha3\n            postalCode\n          }\n          currentVerification {\n            reason\n            status\n          }\n        }\n      }    \n      updatedAt\n      createdAt\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "accountHolderId": "{{personAccountHolderId}}",
          "cardProductId": "{{cardProductId}}",
          "cardHolderAgreementConsent": {
            "consentTimestamp": "2023-01-01T23:59:59Z",
            "primaryAuthorizedPersonId": "{{personAccountHolderId}}"
          }
        }
      }
    },
    {
      "name": "GetDocumentUploadSessionsViaApplicationID",
      "type": "query",
      "required": true,
      "graphql": "query GetDocumentUploadSessionsViaApplicationID(\n  $id: ID!\n  $firstApplicationHistory: Int\n) {\n  node(id: $id) {\n    ... on AccountHolderCardProductApplication {\n      __typename\n      applicationState {\n        status\n      }\n      cardProduct {\n        name\n      }\n      accountHolderSnapshot {\n        ...USPersonAccountHolderSnapshot\n      }\n    }\n  }\n}\n\nfragment USPersonAccountHolderSnapshot on USPersonAccountHolderSnapshot {\n  __typename\n  currentVerification {\n    status\n    reason\n    results {\n      code\n      description\n    }\n    requiredDocuments {\n      createdAt\n      referenceIdentifier\n      updatedAt\n      status\n      documentUploadSession {\n        ... on USAccountHolderApplicationDocumentUploadSession {\n          status\n          id\n        }\n      }\n      uploadedDocuments {\n        ... on AccountHolderApplicationDocument {\n          status\n          type\n          createdAt\n          updatedAt\n        }\n      }\n    }\n  }\n}",
      "variables": {
        "id": "{{personAccountHolderCardProductApplicationId}}"
      }
    },
    {
      "name": "GenerateDocumentUploadClientToken",
      "type": "mutation",
      "required": false,
      "graphql": "mutation GenerateDocumentUploadClientToken($input: GenerateDocumentUploadClientTokenInput!) {\n  generateDocumentUploadClientToken(input: $input) {\n    ... on ClientToken {\n      value\n      expirationDate\n    }\n  }\n}",
      "variables": {
        "input": {
          "documentUploadSessionId": "{{personAccountHolderDocumentUploadSessionId}}",
          "permissions": [
            "MANAGE_DOCUMENT_UPLOAD_SESSION"
          ]
        }
      }
    },
    {
      "name": "StartDocumentUploadSession",
      "type": "mutation",
      "required": false,
      "graphql": "mutation StartDocumentUploadSession($input: StartDocumentUploadSessionInput!) {\n  startDocumentUploadSession(input: $input) {\n    __typename\n    ... on USAccountHolderApplicationDocumentUploadSession {\n      id\n      status\n      primaryDocumentTypes\n      secondaryDocumentTypes\n      supportingDocumentTypes\n      uploadRequirements {\n        constraints {\n          ... on DocumentUploadRequirementConstraint {\n            documentType\n            numberOfDocuments\n          }\n        }\n      }\n    }\n    ... on UserError {\n      errors {\n        code\n        description\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "documentUploadSessionId": "{{personAccountHolderDocumentUploadSessionId}}"
        }
      }
    },
    {
      "name": "CreateDocumentUploadSecureLink",
      "type": "mutation",
      "required": true,
      "graphql": "mutation CreateDocumentUploadSecureLink(\n  $input: CreateDocumentUploadLinkInput!\n) {\n  createDocumentUploadLink(input: $input) {\n    __typename\n    ... on DocumentUploadLink {\n      id\n      documentUploadSession {\n        id\n        status\n        ... on USAccountHolderApplicationDocumentUploadSession {\n          uploadRequirements {\n            constraints {\n              ... on DocumentUploadRequirementConstraint {\n                documentType\n                numberOfDocuments\n              }\n            }\n          }\n        }\n      }\n      documentType\n      status\n      documentCategoryType\n      uploadUrl\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "documentUploadSessionId": "{{documentUploadSessionId}}",
          "documentType": "BANK_STATEMENT"
        }
      }
    },
    {
      "name": "EndDocumentUploadSession",
      "type": "mutation",
      "required": false,
      "graphql": "mutation EndDocumentUploadSession($input: EndDocumentUploadSessionInput!) {\n  endDocumentUploadSession(input: $input) {\n    __typename\n    ... on USAccountHolderApplicationDocumentUploadSession {\n      id\n      status\n      primaryDocumentTypes\n      secondaryDocumentTypes\n      supportingDocumentTypes\n      uploadRequirements {\n        constraints {\n          ... on DocumentUploadRequirementConstraint {\n            documentType\n            numberOfDocuments\n          }\n        }\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "documentUploadSessionId": "{{documentUploadSessionClientToken}}"
        }
      }
    },
    {
      "name": "GetDocumentUploadSession",
      "type": "query",
      "required": true,
      "graphql": "query GetDocumentUploadSession($id: ID!) {\n  node(id: $id) {\n    ... on DocumentUploadSession {\n      id\n      createdAt\n      updatedAt\n      status\n      documents {\n        ... on DocumentUploadLink {\n          id\n          status\n          uploadUrl\n          documentType\n          documentCategoryType\n        }\n      }\n    }\n    ... on AccountHolderCardProductApplication {\n      accountHolderSnapshot {\n        ... on USPersonAccountHolderSnapshot {\n          currentVerification {\n            requiredDocuments {\n              documentUploadSession {\n                ... on USAccountHolderApplicationDocumentUploadSession {\n                  id\n                  status\n                  primaryDocumentTypes\n                  secondaryDocumentTypes\n                  supportingDocumentTypes\n                  uploadRequirements {\n                    constraints {\n                      ... on DocumentUploadRequirementConstraint {\n                        documentType\n                        numberOfDocuments\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "variables": {
        "id": "{{documentUploadSessionId}}"
      }
    },
    {
      "name": "SimulateApplicationDocumentReview",
      "type": "mutation",
      "required": false,
      "graphql": "mutation SimulateApplicationDocumentReview($input: SimulateApplicationDocumentReviewInput!) {\n  simulateApplicationDocumentReview(input: $input) {\n    ... on AccountHolderApplicationDocument {\n      id\n      status\n    }\n    ... on UserError {\n      errors {\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "applicationId": "{{personAccountHolderCardProductApplicationId}}",
          "documentUploadLinkId": "{{documentUploadLinkId}}",
          "documentUploadSessionId": "{{documentUploadSessionId}}",
          "newReviewStatus": "APPROVED"
        }
      }
    },
    {
      "name": "SimulateCreateApplicationDocumentsUploadSessions",
      "type": "mutation",
      "required": false,
      "graphql": "mutation SimulateCreateApplicationDocumentsUploadSessions($input: SimulateCreateApplicationDocumentsUploadSessionsInput!) {\n  simulateCreateApplicationDocumentsUploadSessions(input: $input) {\n    ... on AccountHolderCardProductApplication {\n      id\n      applicationState {\n        status\n      }\n    }\n    ... on UserError {\n      errors {\n        description\n        code\n        errorPath\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "applicationId": "{{personAccountHolderCardProductApplicationId}}",
          "requestedDocuments": [
            {
              "applicantId": "{{personAccountHolderId}}",
              "documentTypes": [
                "SOCIAL_SECURITY_CARD"
              ]
            }
          ]
        }
      }
    },
    {
      "name": "SimulateApplicationVerificationStatusChange",
      "type": "mutation",
      "required": false,
      "graphql": "mutation SimulateApplicationVerificationStatusChange($input: SimulateApplicationVerificationStatusChangeInput!) {\n  simulateApplicationVerificationStatusChange(input: $input) {\n    ... on AccountHolderCardProductApplication {\n      id\n      applicationState {\n        status\n      }\n    }\n    ... on UserError {\n        errors {\n            errorPath\n            code\n            description\n        }\n    }\n  }\n}",
      "variables": {
        "input": {
          "applicantId": "{{personAccountHolderId}}",
          "applicationId": "{{personAccountHolderCardProductApplicationId}}",
          "newVerificationStatus": "PASSED"
        }
      }
    },
    {
      "name": "SimulateApplicationStatusChange",
      "type": "mutation",
      "required": false,
      "graphql": "mutation SimulateApplicationStatusChange($input: SimulateApplicationStatusChangeInput!) {\n  simulateApplicationStatusChange(input: $input) {\n    ... on AccountHolderCardProductApplication {\n      id\n      applicationState {\n        status\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "applicationId": "{{personAccountHolderCardProductApplicationId}}",
          "newApplicationStatus": "APPROVED"
        }
      }
    }
  ]
}