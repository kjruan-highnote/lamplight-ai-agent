[
  {
    "name": "GetAllApiKeys",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetAllAPIKeys($first: Int, $after: String) {\n  organizations {\n    apiKeys(first: $first, after: $after) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          id\n          name\n          redactedKey\n          createdAt\n        }\n      }\n    }\n  }\n}",
      "variables": {
        "first": 10
      }
    },
    "headers": {
      "content-type": "application/json"
    },
    "metadata": {
      "category": "api_key_management",
      "path": "Consumer Charge/Setup/API Key Management/Get All API Keys",
      "description": "",
      "tags": [
        "api_key_management",
        "retrieval"
      ],
      "requires": [],
      "produces": [
        "organizations",
        "pageInfo"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822637",
    "updated_at": "2025-08-04T16:18:34.822641"
  },
  {
    "name": "CreateApiKey",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation CreateSecretAPIKey($input: CreateSecretAPIKeyInput!) {\n  createSecretAPIKey(input: $input) {\n    __typename  \n    ... on APIKey {\n      id\n      name\n      key\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "secretKey": {
            "name": "Test Key"
          }
        }
      }
    },
    "headers": {
      "content-type": "application/json"
    },
    "metadata": {
      "category": "api_key_management",
      "path": "Consumer Charge/Setup/API Key Management/Create API Key",
      "description": "",
      "tags": [
        "api_key_management",
        "creation"
      ],
      "requires": [],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822658",
    "updated_at": "2025-08-04T16:18:34.822658"
  },
  {
    "name": "RevokeApiKey",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation RevokeAPIKey($input: RevokeAPIKeyInput!) {\n  revokeAPIKey(input: $input) {\n    ...on APIKey {\n      id\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "apiKeyId": "{{createdApiKey}}"
        }
      }
    },
    "headers": {
      "content-type": "application/json"
    },
    "metadata": {
      "category": "api_key_management",
      "path": "Consumer Charge/Setup/API Key Management/Revoke API Key",
      "description": "",
      "tags": [
        "api_key_management"
      ],
      "requires": [
        "createdApiKey"
      ],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822671",
    "updated_at": "2025-08-04T16:18:34.822671"
  },
  {
    "name": "GetAllOrganizations",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetAllOrganizations {\n  organizations {\n    id\n    profile {\n      displayName\n      environment\n      region\n    }\n    accounts {\n      edges {\n        node {\n          createdAt\n          updatedAt\n          __typename\n          id\n          name\n          ledgers {\n            creditBalance {\n              value\n            }\n            debitBalance {\n              value\n            }\n          }\n        }\n      }\n    }\n    cardProducts(first: 20) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        cursor\n        node {\n          __typename\n          id\n          name\n          usage\n          vertical\n          accounts {\n            edges {\n              node {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "variables": {}
    },
    "headers": {
      "content-type": "application/json"
    },
    "metadata": {
      "category": "organization",
      "path": "Consumer Charge/Setup/Organization/Get All Organizations",
      "description": "",
      "tags": [
        "organization",
        "retrieval"
      ],
      "requires": [],
      "produces": [
        "organizations",
        "edges",
        "creditBalance",
        "pageInfo",
        "edges"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822690",
    "updated_at": "2025-08-04T16:18:34.822691"
  },
  {
    "name": "GetOrganizationById",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetOrganizationByID($id: ID!) {\n  node(id: $id) {\n    ... on Organization {\n      id\n      profile {\n        displayName\n        environment\n        region\n      }\n      financialAccounts {\n        ledgers {\n          id\n          name\n        }\n      }\n    }\n  }\n}\n",
      "variables": {
        "id": "{{organizationId}}"
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "organization",
      "path": "Consumer Charge/Setup/Organization/Get Organization by ID",
      "description": "",
      "tags": [
        "organization",
        "retrieval"
      ],
      "requires": [
        "organizationId"
      ],
      "produces": [
        "ledgers"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822703",
    "updated_at": "2025-08-04T16:18:34.822704"
  },
  {
    "name": "UpdateOrganizationProfileDisplayName",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation UpdateOrganizationProfileDisplayName($input: UpdateOrganizationProfileDisplayNameInput!) {\n  updateOrganizationProfileDisplayName(input: $input) {\n    ... on Organization {\n      id\n      profile {\n        displayName\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "id": "{{organizationId}}",
          "displayName": "Test"
        }
      }
    },
    "headers": {},
    "metadata": {
      "category": "organization",
      "path": "Consumer Charge/Setup/Organization/Update Organization Profile Display Name",
      "description": "",
      "tags": [
        "organization",
        "modification"
      ],
      "requires": [
        "organizationId"
      ],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822719",
    "updated_at": "2025-08-04T16:18:34.822719"
  },
  {
    "name": "CreateCardProduct",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation CreateCardProduct($input: CreateCardProductInput!) {\n  createCardProduct(input: $input) {\n    __typename\n    ... on CardProduct {\n      id\n      name\n      usage\n      vertical\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "cardProduct": {
            "name": "Consumer Credit Card",
            "usage": "MULTI_USE",
            "vertical": "CONSUMER_CREDIT"
          }
        }
      }
    },
    "headers": {
      "content-type": "application/json"
    },
    "metadata": {
      "category": "card_product",
      "path": "Consumer Charge/Setup/Card Product/Create Card Product",
      "description": "",
      "tags": [
        "card_product",
        "creation"
      ],
      "requires": [],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822737",
    "updated_at": "2025-08-04T16:18:34.822738"
  },
  {
    "name": "EnableCreditCardFeature",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation EnableCreditCardFeature(\n\t$input: EnableCreditCardFeatureInput!\n) {\n\tenableCreditCardFeature(input: $input) {\n\t\t__typename\t\t\t\n\t\t... on CardProduct {\n\t\t\tid\n\t\t\tfeatures {\n\t\t\t\t__typename\n\t\t\t\tenabled\n\t\t\t}\n\t\t}\n\t\t... on UserError {\n\t\t\terrors {\n\t\t\t\tpath\n\t\t\t\tcode\n\t\t\t\tdescription\n\t\t\t}\n\t\t}\n\t}\n}",
      "variables": {
        "input": {
          "cardProductId": "pd_f3a9af6eded9465c800c6696fe6db9cb",
          "feature": "CHARGE"
        }
      }
    },
    "headers": {
      "content-type": "application/json"
    },
    "metadata": {
      "category": "card_product",
      "path": "Consumer Charge/Setup/Card Product/Enable Credit Card Feature",
      "description": "",
      "tags": [
        "card_product"
      ],
      "requires": [],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822751",
    "updated_at": "2025-08-04T16:18:34.822752"
  },
  {
    "name": "EnableCollaborativeApplicationDecisioningFeature",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation EnableCollaborativeApplicationUnderwritingFeature($input: EnableCollaborativeApplicationUnderwritingFeatureInput!) {\n  enableCollaborativeApplicationUnderwritingFeature(input: $input) {\n    ... on CardProduct {\n      id\n      name\n      features {\n        ... on CollaborativeApplicationUnderwritingCardProductFeature {\n          enabled\n          createdAt\n          updatedAt\n        }\n      }\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "cardProductId": "pd_f3a9af6eded9465c800c6696fe6db9cb"
        }
      }
    },
    "headers": {
      "content-type": "application/json"
    },
    "metadata": {
      "category": "card_product",
      "path": "Consumer Charge/Setup/Card Product/Enable Collaborative Application Decisioning Feature",
      "description": "",
      "tags": [
        "card_product"
      ],
      "requires": [],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822768",
    "updated_at": "2025-08-04T16:18:34.822769"
  },
  {
    "name": "GetCardProduct",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetCardProduct($id: ID!) {\n    node(id: $id) {\n        ... on CardProduct {\n            id\n            name\n            features {\n                __typename\n                enabled\n            }\n            accounts {\n                edges {\n                    node {\n                        __typename\n                        id\n                        name\n                        features {\n                            __typename\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
      "variables": {
        "id": "pd_f3a9af6eded9465c800c6696fe6db9cb"
      }
    },
    "headers": {},
    "metadata": {
      "category": "card_product",
      "path": "Consumer Charge/Setup/Card Product/Get Card Product",
      "description": "",
      "tags": [
        "card_product",
        "retrieval"
      ],
      "requires": [],
      "produces": [
        "edges"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822784",
    "updated_at": "2025-08-04T16:18:34.822784"
  },
  {
    "name": "Ping",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query Ping {\n  ping\n}",
      "variables": {}
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "setup",
      "path": "Consumer Charge/Setup/ping",
      "description": "",
      "tags": [
        "setup"
      ],
      "requires": [],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822793",
    "updated_at": "2025-08-04T16:18:34.822793"
  },
  {
    "name": "Introspection",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "variables": {}
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "setup",
      "path": "Consumer Charge/Setup/introspection",
      "description": "",
      "tags": [
        "setup"
      ],
      "requires": [],
      "produces": [
        "__schema"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822812",
    "updated_at": "2025-08-04T16:18:34.822812"
  },
  {
    "name": "SimulateApplicationDocumentReview",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation SimulateApplicationDocumentReview($input: SimulateApplicationDocumentReviewInput!) {\n  simulateApplicationDocumentReview(input: $input) {\n    ... on AccountHolderApplicationDocument {\n      id\n      status\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "applicationId": "{{personAccountHolderInReviewId}}",
          "documentUploadLinkId": "{{documentUploadLinkId}}",
          "documentUploadSessionId": "{{documentUploadSessionId}}",
          "newReviewStatus": "APPROVED"
        }
      }
    },
    "headers": {},
    "metadata": {
      "category": "simulation",
      "path": "Consumer Charge/Onboarding/Person Account Holder/Manual Review/Secure Document Upload/Simulation/Simulate Application Document Review",
      "description": "",
      "tags": [
        "simulation",
        "simulation"
      ],
      "requires": [
        "documentUploadLinkId",
        "personAccountHolderInReviewId",
        "documentUploadSessionId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822842",
    "updated_at": "2025-08-04T16:18:34.822843"
  },
  {
    "name": "SimulateApplicationVerificationStatusChange",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation SimulateApplicationVerificationStatusChange($input: SimulateApplicationVerificationStatusChangeInput!) {\n  simulateApplicationVerificationStatusChange(input: $input) {\n    ... on AccountHolderCardProductApplication {\n      id\n      applicationState {\n        status\n      }\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "applicantId": "{{personAccountHolderInReviewId}}",
          "applicationId": "{{cardProductApplicationInReviewId}}",
          "newVerificationStatus": "PASSED"
        }
      }
    },
    "headers": {},
    "metadata": {
      "category": "simulation",
      "path": "Consumer Charge/Onboarding/Person Account Holder/Manual Review/Secure Document Upload/Simulation/Simulate Application Verification Status Change",
      "description": "",
      "tags": [
        "simulation",
        "simulation"
      ],
      "requires": [
        "cardProductApplicationInReviewId",
        "personAccountHolderInReviewId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822860",
    "updated_at": "2025-08-04T16:18:34.822861"
  },
  {
    "name": "SimulateApplicationStatusChange",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation SimulateApplicationStatusChange($input: SimulateApplicationStatusChangeInput!) {\n  simulateApplicationStatusChange(input: $input) {\n    ... on AccountHolderCardProductApplication {\n      id\n      applicationState {\n        status\n      }\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "applicationId": "{{cardProductApplicationInReviewId}}",
          "newApplicationStatus": "APPROVED"
        }
      }
    },
    "headers": {},
    "metadata": {
      "category": "simulation",
      "path": "Consumer Charge/Onboarding/Person Account Holder/Manual Review/Secure Document Upload/Simulation/Simulate Application Status Change",
      "description": "",
      "tags": [
        "simulation",
        "simulation"
      ],
      "requires": [
        "cardProductApplicationInReviewId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822875",
    "updated_at": "2025-08-04T16:18:34.822876"
  },
  {
    "name": "GetDocumentUploadSessionByApplicationId",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetAccountHolderCardProductApplicationStatus(\n  $id: ID!\n  $firstApplicationHistory: Int\n) {\n  node(id: $id) {\n    ... on AccountHolderCardProductApplication {\n      __typename\n      id\n      createdAt\n      updatedAt\n      applicationState {\n        status\n      }\n      cardProduct {\n        name\n      }\n      accountHolderSnapshot {\n        ...USPersonAccountHolderSnapshot\n      }\n      applicationHistory(first: $firstApplicationHistory) {\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        edges {\n          node {\n            ...ApplicationHistorySnapshot\n          }\n        }\n      }\n    }\n  }\n}\n\nfragment Verification on AccountHolderVerification {\n  status\n  reason\n  results {\n      code\n      description\n    }\n  requiredDocuments {\n    __typename\n    createdAt\n    referenceIdentifier\n    updatedAt\n    status\n    documentUploadSession {\n      ... on USAccountHolderApplicationDocumentUploadSession {\n        status\n        id\n        primaryDocumentTypes\n        secondaryDocumentTypes\n        uploadRequirements {\n          constraints {\n            ... on DocumentUploadRequirementConstraint {\n              numberOfDocuments\n              documentType\n            }\n          }\n        }\n      }\n    }\n    uploadedDocuments {\n      ... on AccountHolderApplicationDocument {\n        status\n        type\n        createdAt\n        updatedAt\n      }\n    }\n  }\n}\n\nfragment USPersonAccountHolderSnapshot on USPersonAccountHolderSnapshot {\n  __typename\n  accountHolderCurrent {\n    id\n  }\n  name {\n    givenName\n    familyName\n    title\n    suffix\n  }\n  currentVerification {\n    ...Verification\n  }\n}\n\n\nfragment ApplicationHistorySnapshot on AccountHolderCardProductApplicationSnapshot {\n  __typename\n  createdAt\n  updatedAt\n  applicationState {\n    status\n  }\n}",
      "variables": {
        "id": "{{cardProductApplicationInReviewId}}"
      }
    },
    "headers": {},
    "metadata": {
      "category": "secure_document_upload",
      "path": "Consumer Charge/Onboarding/Person Account Holder/Manual Review/Secure Document Upload/Get Document Upload Session By Application ID",
      "description": "",
      "tags": [
        "secure_document_upload",
        "retrieval"
      ],
      "requires": [
        "cardProductApplicationInReviewId"
      ],
      "produces": [
        "pageInfo",
        "node",
        "constraints"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822899",
    "updated_at": "2025-08-04T16:18:34.822899"
  },
  {
    "name": "GetDocumentUploadSessionBySessionId",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetDocumentUpload_via_SessionID($id: ID!) {\n\tnode(id: $id) {\n\t\t__typename\n\t\t... on USAccountHolderApplicationDocumentUploadSession {\n\t\t\t__typename\n\t\t\tid\n\t\t\tstatus\n\t\t\tprimaryDocumentTypes\n\t\t\tsecondaryDocumentTypes\n\t\t\tsupportingDocumentTypes\n\t\t\tuploadRequirements {\n\t\t\t\tconstraints {\n\t\t\t\t\t... on DocumentUploadRequirementConstraint {\n\t\t\t\t\t\tdocumentType\n\t\t\t\t\t\tnumberOfDocuments\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdocuments {\n\t\t\t\t... on DocumentUploadLink {\n\t\t\t\t\tid\n\t\t\t\t\tstatus\n\t\t\t\t\tdocumentCategoryType\n\t\t\t\t\tdocumentType\n\t\t\t\t\tstatus\n\t\t\t\t\tdocumentUploadSession {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tstatus\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n",
      "variables": {
        "id": "{{documentUploadSessionId}}"
      }
    },
    "headers": {},
    "metadata": {
      "category": "secure_document_upload",
      "path": "Consumer Charge/Onboarding/Person Account Holder/Manual Review/Secure Document Upload/Get Document Upload Session By Session ID",
      "description": "",
      "tags": [
        "secure_document_upload",
        "retrieval"
      ],
      "requires": [
        "documentUploadSessionId"
      ],
      "produces": [
        "constraints"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822914",
    "updated_at": "2025-08-04T16:18:34.822915"
  },
  {
    "name": "GenerateDocumentUploadClientToken",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation GenerateDocumentUploadClientToken($input: GenerateDocumentUploadClientTokenInput!) {\n  generateDocumentUploadClientToken(input: $input) {\n    ... on ClientToken {\n      value\n      expirationDate\n    }\n  }\n}",
      "variables": {
        "input": {
          "documentUploadSessionId": "{{documentUploadSessionId}}",
          "permissions": [
            "MANAGE_DOCUMENT_UPLOAD_SESSION"
          ]
        }
      }
    },
    "headers": {},
    "metadata": {
      "category": "secure_document_upload",
      "path": "Consumer Charge/Onboarding/Person Account Holder/Manual Review/Secure Document Upload/Generate Document Upload Client Token",
      "description": "",
      "tags": [
        "secure_document_upload"
      ],
      "requires": [
        "documentUploadSessionId"
      ],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822929",
    "updated_at": "2025-08-04T16:18:34.822929"
  },
  {
    "name": "StartDocumentUploadSession",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation StartDocumentUploadSession($input: StartDocumentUploadSessionInput!) {\n  startDocumentUploadSession(input: $input) {\n    __typename\n    ... on USAccountHolderApplicationDocumentUploadSession {\n      id\n      status\n      primaryDocumentTypes\n      secondaryDocumentTypes\n      supportingDocumentTypes\n      uploadRequirements {\n        constraints {\n          ... on DocumentUploadRequirementConstraint {\n            documentType\n            numberOfDocuments\n          }\n        }\n      }\n    }\n    ... on UserError {\n      errors {\n        code\n        description\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "documentUploadSessionId": "{{documentUploadSessionId}}"
        }
      }
    },
    "headers": {},
    "metadata": {
      "category": "secure_document_upload",
      "path": "Consumer Charge/Onboarding/Person Account Holder/Manual Review/Secure Document Upload/Start Document Upload Session",
      "description": "",
      "tags": [
        "secure_document_upload"
      ],
      "requires": [
        "documentUploadSessionId"
      ],
      "produces": [
        "constraints",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822944",
    "updated_at": "2025-08-04T16:18:34.822944"
  },
  {
    "name": "CreateDocumentUploadSecureLink",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation CreateDocumentUploadSecureLink(\n  $input: CreateDocumentUploadLinkInput!\n) {\n  createDocumentUploadLink(input: $input) {\n    __typename\n    ... on DocumentUploadLink {\n      id\n      documentUploadSession {\n        id\n        status\n        ... on USAccountHolderApplicationDocumentUploadSession {\n          uploadRequirements {\n            constraints {\n              ... on DocumentUploadRequirementConstraint {\n                documentType\n                numberOfDocuments\n              }\n            }\n          }\n        }\n      }\n      documentType\n      status\n      documentCategoryType\n      uploadUrl\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "documentUploadSessionId": "{{documentUploadSessionId}}",
          "documentType": "DRIVERS_LICENSE"
        }
      }
    },
    "headers": {},
    "metadata": {
      "category": "secure_document_upload",
      "path": "Consumer Charge/Onboarding/Person Account Holder/Manual Review/Secure Document Upload/Create Document Upload Secure Link",
      "description": "",
      "tags": [
        "secure_document_upload",
        "creation"
      ],
      "requires": [
        "documentUploadSessionId"
      ],
      "produces": [
        "uploadRequirements",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822961",
    "updated_at": "2025-08-04T16:18:34.822961"
  },
  {
    "name": "UploadDocument",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "",
      "variables": {}
    },
    "headers": {},
    "metadata": {
      "category": "secure_document_upload",
      "path": "Consumer Charge/Onboarding/Person Account Holder/Manual Review/Secure Document Upload/Upload Document",
      "description": "",
      "tags": [
        "secure_document_upload"
      ],
      "requires": [],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822980",
    "updated_at": "2025-08-04T16:18:34.822981"
  },
  {
    "name": "EndDocumentUploadSession",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation EndDocumentUploadSession($input: EndDocumentUploadSessionInput!) {\n  endDocumentUploadSession(input: $input) {\n    __typename\n    ... on USAccountHolderApplicationDocumentUploadSession {\n      id\n      status\n      primaryDocumentTypes\n      secondaryDocumentTypes\n      supportingDocumentTypes\n      uploadRequirements {\n        constraints {\n          ... on DocumentUploadRequirementConstraint {\n            documentType\n            numberOfDocuments\n          }\n        }\n      }\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "documentUploadSessionId": "{{documentUploadSessionId}}"
        }
      }
    },
    "headers": {},
    "metadata": {
      "category": "secure_document_upload",
      "path": "Consumer Charge/Onboarding/Person Account Holder/Manual Review/Secure Document Upload/End Document Upload Session",
      "description": "",
      "tags": [
        "secure_document_upload"
      ],
      "requires": [
        "documentUploadSessionId"
      ],
      "produces": [
        "constraints",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.822996",
    "updated_at": "2025-08-04T16:18:34.822996"
  },
  {
    "name": "CreatePersonAccountHolderInReview",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation CreateUSPersonAccountHolder(\n  $input: CreateUSPersonAccountHolderInput!\n) {\n  createUSPersonAccountHolder(input: $input) {\n    __typename\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on USPersonAccountHolder {\n      id\n      email\n      dateOfBirth\n      externalId\n      updatedAt\n      createdAt\n      name {\n        givenName\n        familyName\n        title\n        suffix\n        middleName\n      }\n      billingAddress {\n        streetAddress\n        extendedAddress\n        postalCode\n        region\n        locality\n        countryCodeAlpha3\n      }\n      phoneNumbers {\n        countryCode\n        number\n        label\n      }\n      identificationDocument {\n        socialSecurityNumber {\n          numberHash\n          countryCodeAlpha3\n        }\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "personAccountHolder": {
            "email": "foo@example.com",
            "name": {
              "givenName": "IN-REVIEW",
              "familyName": "IN-REVIEW"
            },
            "billingAddress": {
              "streetAddress": "123 Manual Review St.",
              "postalCode": "60654",
              "locality": "Chicago",
              "region": "IL",
              "countryCodeAlpha3": "USA"
            },
            "phoneNumber": {
              "countryCode": "1",
              "number": "5555555555",
              "label": "MOBILE",
              "extension": "312"
            },
            "identificationDocument": {
              "socialSecurityNumber": {
                "number": "111-11-1111",
                "countryCodeAlpha3": "USA"
              }
            },
            "dateOfBirth": "1980-12-12",
            "externalId": "some-id"
          }
        }
      }
    },
    "headers": {
      "content-type": "application/json"
    },
    "metadata": {
      "category": "manual_review",
      "path": "Consumer Charge/Onboarding/Person Account Holder/Manual Review/Create Person Account Holder In Review",
      "description": "",
      "tags": [
        "manual_review",
        "creation"
      ],
      "requires": [],
      "produces": [
        "errors",
        "socialSecurityNumber"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823026",
    "updated_at": "2025-08-04T16:18:34.823027"
  },
  {
    "name": "CreatePersonAccountHolderApplicationCopy",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation CreateAccountHolderCardProductApplication($input: CreateAccountHolderCardProductApplicationInput!) {\n  createAccountHolderCardProductApplication(input: $input) {\n    __typename\n      ... on AccountHolderCardProductApplication {\n      id\n      applicationState {\n        status\n      }\n      cardProduct {\n        id\n      }  \n      accountHolderSnapshot {\n        ... on USPersonAccountHolderSnapshot {\n          accountHolderCurrent {\n            id\n          }\n          name {\n            givenName\n            familyName\n          }\n          billingAddress {\n            streetAddress\n            locality\n            region\n            countryCodeAlpha3\n            postalCode\n          }\n          currentVerification {\n            reason\n            status\n          }\n        }\n      }    \n      updatedAt\n      createdAt\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "accountHolderId": "{{personAccountHolderInReviewId}}",
          "cardProductId": "{{cardProductId}}",
          "cardHolderAgreementConsent": {
            "consentTimestamp": "2022-01-01T23:59:59Z",
            "primaryAuthorizedPersonId": "{{personAccountHolderInReviewId}}"
          }
        }
      }
    },
    "headers": {
      "content-type": "application/json"
    },
    "metadata": {
      "category": "manual_review",
      "path": "Consumer Charge/Onboarding/Person Account Holder/Manual Review/Create Person Account Holder Application Copy",
      "description": "",
      "tags": [
        "manual_review",
        "creation"
      ],
      "requires": [
        "cardProductId",
        "personAccountHolderInReviewId"
      ],
      "produces": [
        "accountHolderCurrent",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823050",
    "updated_at": "2025-08-04T16:18:34.823051"
  },
  {
    "name": "CreatePersonAccountHolder",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation CreateUSPersonAccountHolder(\n  $input: CreateUSPersonAccountHolderInput!\n) {\n  createUSPersonAccountHolder(input: $input) {\n    __typename\n    ... on AccessDeniedError {\n        message\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on USPersonAccountHolder {\n      id\n      email\n      dateOfBirth\n      externalId\n      updatedAt\n      createdAt\n      name {\n        givenName\n        familyName\n        title\n        suffix\n        middleName\n      }\n      billingAddress {\n        streetAddress\n        extendedAddress\n        postalCode\n        region\n        locality\n        countryCodeAlpha3\n      }\n      phoneNumbers {\n        countryCode\n        number\n        label\n      }\n      identificationDocument {\n        socialSecurityNumber {\n          numberHash\n          countryCodeAlpha3\n        }\n      }\n      personCreditRiskAttributes {\n        totalAnnualIncome {\n          value\n          currencyCode\n        }\n        currentDebtObligations {\n          value\n          currencyCode\n        }\n        employmentStatus\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "personAccountHolder": {
            "name": {
              "givenName": "Walt",
              "familyName": "Disney"
            },
            "externalId": "Disney,Walt",
            "email": "walt@disney.com",
            "dateOfBirth": "1991-12-05",
            "billingAddress": {
              "countryCodeAlpha3": "USA",
              "region": "CA",
              "locality": "Anaheim",
              "postalCode": "92802",
              "streetAddress": "1313 Disneyland Drive"
            },
            "phoneNumber": {
              "label": "HOME",
              "countryCode": "1",
              "number": "714-316-3075"
            },
            "identificationDocument": {
              "socialSecurityNumber": {
                "countryCodeAlpha3": "USA",
                "number": "562100296"
              }
            },
            "personCreditRiskAttributes": {
              "currentDebtObligations": {
                "value": 0,
                "currencyCode": "USD"
              },
              "employmentStatus": "EMPLOYED",
              "totalAnnualIncome": {
                "value": 1000000,
                "currencyCode": "USD"
              }
            }
          }
        }
      }
    },
    "headers": {
      "content-type": "application/json"
    },
    "metadata": {
      "category": "person_account_holder",
      "path": "Consumer Charge/Onboarding/Person Account Holder/Create Person Account Holder",
      "description": "",
      "tags": [
        "person_account_holder",
        "creation"
      ],
      "requires": [],
      "produces": [
        "errors",
        "socialSecurityNumber",
        "totalAnnualIncome"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823085",
    "updated_at": "2025-08-04T16:18:34.823086"
  },
  {
    "name": "SearchPersonAccountHolders",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query SearchPersonAccountHolders($filterBy: PersonAccountHolderFilterInput) {\n  personAccountHolders(filterBy: $filterBy) {\n    edges {\n      node {\n        id\n        email\n        dateOfBirth\n        externalId\n        updatedAt\n        createdAt\n        financialAccounts {\n          edges {\n            node {\n              id\n              name\n              owner {\n                __typename\n              }\n            }\n          }\n        }\n        paymentCards {\n          edges {\n            node {\n              last4\n              financialAccounts {\n                id\n                name\n                owner {\n                  __typename\n                }\n              }\n            }\n          }\n        }\n        name {\n          givenName\n          familyName\n          title\n          suffix\n          middleName\n        }\n        billingAddress {\n          streetAddress\n          extendedAddress\n          postalCode\n          region\n          locality\n          countryCodeAlpha3\n        }\n        phoneNumbers {\n          countryCode\n          number\n          label\n        }\n        identificationDocument {\n          socialSecurityNumber {\n            numberHash\n            countryCodeAlpha3\n          }\n        }\n      }\n    }\n  }\n}\n",
      "variables": {
        "filterBy": {
          "name": {
            "givenName": {
              "soundsLike": "Walt"
            },
            "familyName": {
              "soundsLike": "Disney"
            }
          }
        }
      }
    },
    "headers": {
      "content-type": "application/json"
    },
    "metadata": {
      "category": "person_account_holder",
      "path": "Consumer Charge/Onboarding/Person Account Holder/Search Person Account Holders",
      "description": "",
      "tags": [
        "person_account_holder",
        "search"
      ],
      "requires": [],
      "produces": [
        "edges",
        "edges",
        "edges",
        "socialSecurityNumber"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823108",
    "updated_at": "2025-08-04T16:18:34.823109"
  },
  {
    "name": "UpdatePersonAccountHolderAddress",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation UpdateUSPersonAccountHolderBillingAddress(\n  $input: UpdateUSPersonAccountHolderBillingAddressInput!\n) {\n  updateUSPersonAccountHolderBillingAddress(input: $input) {\n    __typename\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on USPersonAccountHolder {\n      id\n      email\n      dateOfBirth\n      externalId\n      updatedAt\n      createdAt\n      name {\n        givenName\n        familyName\n        title\n        suffix\n        middleName\n      }\n      billingAddress {\n        streetAddress\n        extendedAddress\n        postalCode\n        region\n        locality\n        countryCodeAlpha3\n      }\n      phoneNumbers {\n        countryCode\n        number\n        label\n      }\n      paymentCards {\n        edges {\n          node {\n            id\n            last4\n            application {\n              accountHolderSnapshot {\n                ... on USPersonAccountHolderSnapshot {\n                  billingAddress {\n                    streetAddress\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "accountHolderId": "{{personAccountHolderId}}",
          "billingAddress": {
            "streetAddress": "123 Main Street",
            "extendedAddress": "",
            "postalCode": "60654",
            "region": "IL",
            "locality": "Chicago",
            "countryCodeAlpha3": "USA"
          },
          "updatePaymentCardBillingAddress": true
        }
      }
    },
    "headers": {
      "content-type": "application/json"
    },
    "metadata": {
      "category": "person_account_holder",
      "path": "Consumer Charge/Onboarding/Person Account Holder/Update Person Account Holder Address",
      "description": "",
      "tags": [
        "person_account_holder",
        "modification"
      ],
      "requires": [
        "personAccountHolderId"
      ],
      "produces": [
        "errors",
        "edges",
        "accountHolderSnapshot",
        "billingAddress"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823132",
    "updated_at": "2025-08-04T16:18:34.823133"
  },
  {
    "name": "UpdatePersonAccountHolderPhone",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation UpdateUSPersonAccountHolderPhone(\n  $input: UpdateUSPersonAccountHolderPhoneInput!\n) {\n  updateUSPersonAccountHolderPhone(input: $input) {\n    __typename\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on USPersonAccountHolder {\n      id\n      email\n      dateOfBirth\n      externalId\n      updatedAt\n      createdAt\n      name {\n        givenName\n        familyName\n        title\n        suffix\n        middleName\n      }\n      billingAddress {\n        streetAddress\n        extendedAddress\n        postalCode\n        region\n        locality\n        countryCodeAlpha3\n      }\n      phoneNumbers {\n        countryCode\n        number\n        label\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "accountHolderId": "{{personAccountHolderId}}",
          "phoneNumber": {
            "number": "5555555556",
            "countryCode": "1",
            "label": "MOBILE"
          }
        }
      }
    },
    "headers": {
      "content-type": "application/json"
    },
    "metadata": {
      "category": "person_account_holder",
      "path": "Consumer Charge/Onboarding/Person Account Holder/Update Person Account Holder Phone",
      "description": "",
      "tags": [
        "person_account_holder",
        "modification"
      ],
      "requires": [
        "personAccountHolderId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823151",
    "updated_at": "2025-08-04T16:18:34.823152"
  },
  {
    "name": "UpdatePersonAccountHolderEmail",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation UpdateUSPersonAccountHolderEmail(\n  $input: UpdateUSPersonAccountHolderEmailInput!\n) {\n  updateUSPersonAccountHolderEmail(input: $input) {\n    __typename\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on USPersonAccountHolder {\n      id\n      email\n      dateOfBirth\n      externalId\n      updatedAt\n      createdAt\n      name {\n        givenName\n        familyName\n        title\n        suffix\n        middleName\n      }\n      billingAddress {\n        streetAddress\n        extendedAddress\n        postalCode\n        region\n        locality\n        countryCodeAlpha3\n      }\n      phoneNumbers {\n        countryCode\n        number\n        label\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "accountHolderId": "{{personAccountHolderId}}",
          "email": "foo+testing-update@email.com"
        }
      }
    },
    "headers": {
      "content-type": "application/json"
    },
    "metadata": {
      "category": "person_account_holder",
      "path": "Consumer Charge/Onboarding/Person Account Holder/Update Person Account Holder Email",
      "description": "",
      "tags": [
        "person_account_holder",
        "modification"
      ],
      "requires": [
        "personAccountHolderId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823168",
    "updated_at": "2025-08-04T16:18:34.823169"
  },
  {
    "name": "GetAllPersonAccountHolders",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "fragment accountHolder on USPersonAccountHolder {\n  id\n  email\n  dateOfBirth\n  externalId\n  createdAt\n  updatedAt\n  name {\n    givenName\n    familyName\n    middleName\n    suffix\n    title\n  }\n  externalFinancialAccounts {\n    edges {\n      node {\n        __typename\n        ... on ExternalFinancialBankAccount {\n          id\n        }\n      }\n    }\n  }\n  identificationDocument {\n    socialSecurityNumber {\n      numberHash\n      countryCodeAlpha3\n    }\n  }\n  billingAddress {\n    streetAddress\n    extendedAddress\n    postalCode\n    region\n    locality\n    countryCodeAlpha3\n  }\n  phoneNumbers {\n    number\n    countryCode\n    label\n  }\n  financialAccounts {\n    edges {\n      node {\n        name\n        owner {\n          __typename\n        }\n      }\n    }\n  }\n  paymentCards {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        last4\n        formFactor\n        financialAccounts {\n          __typename\n          id\n          name\n        }\n      }\n    }\n  }\n  cardProductApplications {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        applicationState {\n          status\n        }\n      }\n    }\n  }\n}\n\nquery ListAccountHolders($first: Int, $filterBy: PersonAccountHolderFilterInput) {\n  personAccountHolders(first: $first, filterBy: $filterBy) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      cursor\n      node {\n        ...accountHolder\n      }\n    }\n  }\n}\n",
      "variables": {
        "first": 20,
        "filterBy": {}
      }
    },
    "headers": {
      "content-type": "application/json"
    },
    "metadata": {
      "category": "person_account_holder",
      "path": "Consumer Charge/Onboarding/Person Account Holder/Get All Person Account Holders",
      "description": "",
      "tags": [
        "person_account_holder",
        "retrieval"
      ],
      "requires": [],
      "produces": [
        "edges",
        "socialSecurityNumber",
        "edges",
        "pageInfo",
        "node"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823190",
    "updated_at": "2025-08-04T16:18:34.823191"
  },
  {
    "name": "GetPersonAccountHolderById",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetUSPersonAccountHolderByID($id: ID!) {\n  node(id: $id) {\n    ... on USPersonAccountHolder {\n      id\n      email\n      dateOfBirth\n      externalId\n      updatedAt\n      createdAt\n      cardProductApplications {\n        edges {\n          node {\n            id\n          }\n        }\n      }\n      externalFinancialAccounts {\n        edges {\n          node {\n            __typename\n            ... on ExternalFinancialBankAccount {\n              id\n            }\n          }\n        }\n      }\n      financialAccounts {\n        edges {\n          node {\n            directDepositDetails {\n              id\n            }\n          }\n        }\n      }\n      name {\n        givenName\n        familyName\n        title\n        suffix\n        middleName\n      }\n      billingAddress {\n        streetAddress\n        extendedAddress\n        postalCode\n        region\n        locality\n        countryCodeAlpha3\n      }\n      phoneNumbers {\n        countryCode\n        number\n        label\n      }\n      identificationDocument {\n        socialSecurityNumber {\n          numberHash\n          countryCodeAlpha3\n        }\n      }\n    }\n  }\n}\n",
      "variables": {
        "id": "{{personAccountHolderId}}"
      }
    },
    "headers": {
      "content-type": "application/json"
    },
    "metadata": {
      "category": "person_account_holder",
      "path": "Consumer Charge/Onboarding/Person Account Holder/Get Person Account Holder by ID",
      "description": "",
      "tags": [
        "person_account_holder",
        "retrieval"
      ],
      "requires": [
        "personAccountHolderId"
      ],
      "produces": [
        "edges",
        "edges",
        "edges",
        "directDepositDetails",
        "socialSecurityNumber"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823208",
    "updated_at": "2025-08-04T16:18:34.823209"
  },
  {
    "name": "CreatePersonAccountHolderApplication",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation CreateAccountHolderCardProductApplication($input: CreateAccountHolderCardProductApplicationInput!) {\n  createAccountHolderCardProductApplication(input: $input) {\n    __typename\n      ... on AccountHolderCardProductApplication {\n      id\n      applicationState {\n        status\n      }\n      cardProduct {\n        id\n      }  \n      accountHolderSnapshot {\n        ... on USPersonAccountHolderSnapshot {\n          accountHolderCurrent {\n            id\n          }\n          name {\n            givenName\n            familyName\n          }\n          billingAddress {\n            streetAddress\n            locality\n            region\n            countryCodeAlpha3\n            postalCode\n          }\n          currentVerification {\n            reason\n            status\n          }\n        }\n      }    \n      updatedAt\n      createdAt\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "accountHolderId": "{{personAccountHolderId}}",
          "cardProductId": "{{cardProductId}}",
          "cardHolderAgreementConsent": {
            "consentTimestamp": "2022-01-01T23:59:59Z",
            "primaryAuthorizedPersonId": "{{personAccountHolderId}}"
          }
        }
      }
    },
    "headers": {
      "content-type": "application/json"
    },
    "metadata": {
      "category": "application",
      "path": "Consumer Charge/Onboarding/Application/Create Person Account Holder Application",
      "description": "",
      "tags": [
        "application",
        "creation"
      ],
      "requires": [
        "personAccountHolderId",
        "cardProductId"
      ],
      "produces": [
        "accountHolderCurrent",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823233",
    "updated_at": "2025-08-04T16:18:34.823234"
  },
  {
    "name": "GetPersonAccountHolderApplicationById",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetPersonAccountHolderByApplicationID($id: ID!) {\n  node (id: $id) {\n    ... on AccountHolderCardProductApplication {\n      id\n      cardProduct {\n        id\n        name\n      }\n      createdAt\n      applicationState {\n        status\n      }\n      accountHolderSnapshot {\n        ... on USPersonAccountHolderSnapshot {\n          name {\n            givenName\n            middleName\n            familyName\n            suffix\n            title\n          }\n          email\n          dateOfBirth\n          phoneNumbers {\n            countryCode\n            number\n            label\n          }\n          billingAddress {\n            streetAddress\n            extendedAddress\n            postalCode\n            region\n            locality\n            countryCodeAlpha3\n          }\n          personCreditRiskAttributes {\n            employmentStatus\n            currentDebtObligations {\n              currencyCode\n              value\n            }\n            totalAnnualIncome {\n              currencyCode\n              value\n            }\n          }\n\n        }\n      }\n    }\n  }\n}",
      "variables": {
        "id": "{{cardProductApplicationId}}"
      }
    },
    "headers": {
      "content-type": "application/json"
    },
    "metadata": {
      "category": "application",
      "path": "Consumer Charge/Onboarding/Application/Get Person Account Holder Application by ID",
      "description": "",
      "tags": [
        "application",
        "retrieval"
      ],
      "requires": [
        "cardProductApplicationId"
      ],
      "produces": [
        "name"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823253",
    "updated_at": "2025-08-04T16:18:34.823254"
  },
  {
    "name": "ApproveApplicationUnderwriting",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation ApproveCreditProductApplicationUnderwriting($input: ApproveCreditProductApplicationUnderwritingInput!) {\n  approveCreditProductApplicationUnderwriting(input: $input) {\n    ... on AccountHolderCardProductApplication {\n      id\n      createdAt\n      updatedAt\n      applicationState {\n        status\n      }\n      cardProduct {\n        id\n        name\n      }\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "applicationId": "{{cardProductApplicationId}}",
          "decisionDate": "2023-01-01T23:59:59Z",
          "standardPurchaseCreditLimit": {
            "currencyCode": "USD",
            "value": 100000
          }
        }
      }
    },
    "headers": {},
    "metadata": {
      "category": "application",
      "path": "Consumer Charge/Onboarding/Application/Approve Application Underwriting",
      "description": "",
      "tags": [
        "application"
      ],
      "requires": [
        "cardProductApplicationId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823309",
    "updated_at": "2025-08-04T16:18:34.823310"
  },
  {
    "name": "DenyApplicationUnderwriting",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation DenyCreditProductApplicationUnderwriting($input: DenyCreditProductApplicationUnderwritingInput!) {\n  denyCreditProductApplicationUnderwriting(input: $input) {\n    ... on AccountHolderCardProductApplication {\n      id\n      cardProduct {\n        id\n        name\n      }\n      applicationDenialReason\n      adverseActionReasons {\n        code\n        description\n      }\n      createdAt\n      updatedAt\n      applicationState {\n        status\n      }\n    }\n    ... on UserError {\n        errors {\n            code\n            description\n            path\n        }\n    }\n  }\n}",
      "variables": {
        "input": {
          "applicationId": "{{cardProductApplicationId}}",
          "adverseActionReasons": [
            {
              "code": "INSUFFICIENT_INCOME"
            }
          ],
          "decisionDate": "2023-01-01T23:59:59Z"
        }
      }
    },
    "headers": {},
    "metadata": {
      "category": "application",
      "path": "Consumer Charge/Onboarding/Application/Deny Application Underwriting",
      "description": "",
      "tags": [
        "application"
      ],
      "requires": [
        "cardProductApplicationId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823327",
    "updated_at": "2025-08-04T16:18:34.823327"
  },
  {
    "name": "InitiateFundsDepositAchTransfer",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation InitiateFundsDepositACHTransfer($input: InitiateFundsDepositACHTransferInput!) {\n  initiateFundsDepositACHTransfer(input: $input) {\n    ... on IntegratorInitiatedFundsDepositACHTransfer {\n      id\n      createdAt\n      updatedAt\n      companyName\n      companyIdentifier\n      settlementDate\n      fundsAvailableDate\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "amount": {
            "value": 1000,
            "currencyCode": "USD"
          },
          "toFinancialAccountId": "{{financialAccountId}}",
          "fromFinancialAccountId": "{{externalBankAccountVerifiedThroughPlaidId}}",
          "descriptor": {
            "companyEntryDescription": "Company",
            "individualIdentificationNumber": "",
            "individualName": "Baja ABC"
          },
          "transferAgreementConsent": {
            "authorizedPersonId": "{{personAccountHolderId}}",
            "consentTimestamp": "2022-12-07T14:42:52.453Z",
            "template": {
              "consentTemplateId": "consent",
              "consentTemplateVersion": "0"
            }
          }
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "funds_deposit_ach_transfer",
      "path": "Consumer Charge/Funding/ACH Transfer (& Simulation)/Integrator Initiated (Originated) ACH/Funds Deposit ACH Transfer/Initiate Funds Deposit ACH Transfer",
      "description": "",
      "tags": [
        "funds_deposit_ach_transfer"
      ],
      "requires": [
        "personAccountHolderId",
        "externalBankAccountVerifiedThroughPlaidId",
        "financialAccountId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823366",
    "updated_at": "2025-08-04T16:18:34.823366"
  },
  {
    "name": "SimulateProcessingIntegratorInitiatedStatusChange",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation SimulateProcessingIntegratorInitiatedStatusChange($input: SimulateProcessingIntegratorInitiatedStatusChangeInput!) {\n  simulateProcessingIntegratorInitiatedStatusChange(input: $input) {\n    ... on IntegratorInitiatedFundsDepositACHTransfer {\n      id\n      amount {\n        value\n        currencyCode\n      }\n      fundsAvailableDate\n      settlementDate\n      companyIdentifier\n      descriptor {\n        companyEntryDescription\n        individualName\n        individualIdentificationNumber\n      }\n      updatedAt\n      createdAt\n      status {\n        ... on NonFailureIntegratorInitiatedACHStatus {\n          status\n        }\n        ... on FailureIntegratorInitiatedACHStatus {\n          status\n          statusReasonCode\n        }\n      }\n      fromFinancialAccount {\n        ... on FinancialAccount {\n          id\n        }\n      }\n      toFinancialAccount {\n        ... on FinancialAccount {\n          id\n        }\n      }\n      companyName\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "id": "{{fundsDepositAchTransferId}}"
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "funds_deposit_ach_transfer",
      "path": "Consumer Charge/Funding/ACH Transfer (& Simulation)/Integrator Initiated (Originated) ACH/Funds Deposit ACH Transfer/Simulate Processing Integrator Initiated Status Change",
      "description": "",
      "tags": [
        "funds_deposit_ach_transfer",
        "simulation"
      ],
      "requires": [
        "fundsDepositAchTransferId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823387",
    "updated_at": "2025-08-04T16:18:34.823388"
  },
  {
    "name": "SimulateProcessedIntegratorInitiatedStatusChange",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation SimulateProcessedIntegratorInitiatedStatusChange($input: SimulateProcessedIntegratorInitiatedStatusChangeInput!) {\n  simulateProcessedIntegratorInitiatedStatusChange(input: $input) {\n    ... on IntegratorInitiatedFundsDepositACHTransfer {\n      id\n      integratorInitiatedFundsDepositACHTransferStatus: status {\n        ... on NonFailureIntegratorInitiatedACHStatus {\n            status\n        }\n        ... on FailureIntegratorInitiatedACHStatus {\n            status\n            statusReasonCode\n        }\n      }\n    }\n    ... on UserError {\n      errors {\n        __typename\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      __typename\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "id": "{{fundsDepositAchTransferId}}"
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "funds_deposit_ach_transfer",
      "path": "Consumer Charge/Funding/ACH Transfer (& Simulation)/Integrator Initiated (Originated) ACH/Funds Deposit ACH Transfer/Simulate Processed Integrator Initiated Status Change",
      "description": "",
      "tags": [
        "funds_deposit_ach_transfer",
        "simulation"
      ],
      "requires": [
        "fundsDepositAchTransferId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823405",
    "updated_at": "2025-08-04T16:18:34.823406"
  },
  {
    "name": "SimulateReturnedIntegratorInitiatedStatusChange",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation SimulateReturnedIntegratorInitiatedStatusChange($input: SimulateReturnedIntegratorInitiatedStatusChangeInput!) {\n  simulateReturnedIntegratorInitiatedStatusChange(input: $input) {\n    ... on UserError {\n      errors {\n        __typename\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      __typename\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "id": "{{fundsDepositAchTransferId}}",
          "reasonCode": "INSUFFICIENT_FUNDS_IN_HIGHNOTE_ACCOUNT"
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "funds_deposit_ach_transfer",
      "path": "Consumer Charge/Funding/ACH Transfer (& Simulation)/Integrator Initiated (Originated) ACH/Funds Deposit ACH Transfer/Simulate Returned Integrator Initiated Status Change",
      "description": "",
      "tags": [
        "funds_deposit_ach_transfer",
        "simulation"
      ],
      "requires": [
        "fundsDepositAchTransferId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823421",
    "updated_at": "2025-08-04T16:18:34.823421"
  },
  {
    "name": "InitiateFundsWithdrawalAchTransfer",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation InitiateFundsWithdrawalACHTransfer($input: InitiateFundsWithdrawalACHTransferInput!) {\n  initiateFundsWithdrawalACHTransfer(input: $input) {\n    ... on IntegratorInitiatedFundsWithdrawalACHTransfer {\n      id\n      createdAt\n      updatedAt\n      companyName\n      companyIdentifier\n      settlementDate\n      fundsAvailableDate\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "fromFinancialAccountId": "{{financialAccountId}}",
          "toFinancialAccountId": "{{externalBankAccountVerifiedThroughPlaidId}}",
          "amount": {
            "value": 1000,
            "currencyCode": "USD"
          },
          "descriptor": {
            "companyEntryDescription": "Test Entry",
            "individualName": "Test",
            "individualIdentificationNumber": "1234"
          },
          "transferAgreementConsent": {
            "consentTimestamp": "2023-12-07T14:42:52.453Z",
            "authorizedPersonId": "{{personAccountHolderId}}",
            "template": {
              "consentTemplateId": "consent",
              "consentTemplateVersion": "0"
            }
          },
          "idempotencyKey": "abcde123",
          "cancellationPeriodMillis": 0,
          "sameDay": false
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "funds_withdrawal_ach_transfer",
      "path": "Consumer Charge/Funding/ACH Transfer (& Simulation)/Integrator Initiated (Originated) ACH/Funds Withdrawal ACH Transfer/Initiate Funds Withdrawal ACH Transfer",
      "description": "",
      "tags": [
        "funds_withdrawal_ach_transfer"
      ],
      "requires": [
        "personAccountHolderId",
        "externalBankAccountVerifiedThroughPlaidId",
        "financialAccountId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823450",
    "updated_at": "2025-08-04T16:18:34.823451"
  },
  {
    "name": "SimulateProcessingIntegratorInitiatedStatusChange",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation SimulateProcessingIntegratorInitiatedStatusChange($input: SimulateProcessingIntegratorInitiatedStatusChangeInput!) {\n  simulateProcessingIntegratorInitiatedStatusChange(input: $input) {\n    ... on IntegratorInitiatedFundsWithdrawalACHTransfer {\n      id\n      amount {\n        value\n        currencyCode\n      }\n      fundsAvailableDate\n      settlementDate\n      companyIdentifier\n      descriptor {\n        companyEntryDescription\n        individualName\n        individualIdentificationNumber\n      }\n      updatedAt\n      createdAt\n      status {\n        ... on NonFailureIntegratorInitiatedACHStatus {\n          status\n        }\n        ... on FailureIntegratorInitiatedACHStatus {\n          status\n          statusReasonCode\n        }\n      }\n      fromFinancialAccount {\n        ... on FinancialAccount {\n          id\n        }\n      }\n      toFinancialAccount {\n        ... on FinancialAccount {\n          id\n        }\n      }\n      companyName\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "id": "{{fundsWithdrawalAchTransferId}}"
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "funds_withdrawal_ach_transfer",
      "path": "Consumer Charge/Funding/ACH Transfer (& Simulation)/Integrator Initiated (Originated) ACH/Funds Withdrawal ACH Transfer/Simulate Processing Integrator Initiated Status Change",
      "description": "",
      "tags": [
        "funds_withdrawal_ach_transfer",
        "simulation"
      ],
      "requires": [
        "fundsWithdrawalAchTransferId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823471",
    "updated_at": "2025-08-04T16:18:34.823471"
  },
  {
    "name": "SimulateProcessedIntegratorInitiatedStatusChange",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation SimulateProcessedIntegratorInitiatedStatusChange($input: SimulateProcessedIntegratorInitiatedStatusChangeInput!) {\n  simulateProcessedIntegratorInitiatedStatusChange(input: $input) {\n    ... on IntegratorInitiatedFundsWithdrawalACHTransfer {\n      id\n      integratorInitiatedFundsWithdrawalACHTransferStatus: status {\n        ... on NonFailureIntegratorInitiatedACHStatus {\n            status\n        }\n        ... on FailureIntegratorInitiatedACHStatus {\n            status\n            statusReasonCode\n        }\n      }\n    }\n    ... on UserError {\n      errors {\n        __typename\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      __typename\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "id": "{{fundsWithdrawalAchTransferId}}"
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "funds_withdrawal_ach_transfer",
      "path": "Consumer Charge/Funding/ACH Transfer (& Simulation)/Integrator Initiated (Originated) ACH/Funds Withdrawal ACH Transfer/Simulate Processed Integrator Initiated Status Change",
      "description": "",
      "tags": [
        "funds_withdrawal_ach_transfer",
        "simulation"
      ],
      "requires": [
        "fundsWithdrawalAchTransferId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823487",
    "updated_at": "2025-08-04T16:18:34.823488"
  },
  {
    "name": "SimulateReturnedIntegratorInitiatedStatusChange",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation SimulateReturnedIntegratorInitiatedStatusChange($input: SimulateReturnedIntegratorInitiatedStatusChangeInput!) {\n  simulateReturnedIntegratorInitiatedStatusChange(input: $input) {\n    ... on IntegratorInitiatedFundsWithdrawalACHTransfer {\n      id\n      integratorInitiatedFundsWithdrawalACHTransferStatus: status {\n        ... on NonFailureIntegratorInitiatedACHStatus {\n            status\n        }\n        ... on FailureIntegratorInitiatedACHStatus {\n            status\n            statusReasonCode\n        }\n      }\n    }\n    ... on UserError {\n      errors {\n        __typename\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      __typename\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "id": "{{fundsWithdrawalAchTransferId}}",
          "reasonCode": "INSUFFICIENT_FUNDS_IN_HIGHNOTE_ACCOUNT"
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "funds_withdrawal_ach_transfer",
      "path": "Consumer Charge/Funding/ACH Transfer (& Simulation)/Integrator Initiated (Originated) ACH/Funds Withdrawal ACH Transfer/Simulate Returned Integrator Initiated Status Change",
      "description": "",
      "tags": [
        "funds_withdrawal_ach_transfer",
        "simulation"
      ],
      "requires": [
        "fundsWithdrawalAchTransferId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823505",
    "updated_at": "2025-08-04T16:18:34.823506"
  },
  {
    "name": "AddExternalBankAccountVerifiedThroughPlaid",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation AddExternalBankAccountVerifiedThroughPlaid($input: AddExternalBankAccountVerifiedThroughPlaidInput!) {\n  addExternalBankAccountVerifiedThroughPlaid(input: $input) {\n    ... on ExternalFinancialBankAccount {\n      id\n    }\n    ... on UserError {\n      errors {\n        code\n        description\n        path\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "accountHolderId": "{{personAccountHolderId}}",
          "externalToken": {
            "value": "processor-token-success"
          }
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "integrator_initiated_originated_ach",
      "path": "Consumer Charge/Funding/ACH Transfer (& Simulation)/Integrator Initiated (Originated) ACH/Add External Bank Account Verified Through Plaid",
      "description": "",
      "tags": [
        "integrator_initiated_originated_ach"
      ],
      "requires": [
        "personAccountHolderId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823522",
    "updated_at": "2025-08-04T16:18:34.823522"
  },
  {
    "name": "GetExternalFinancialAccountsByAccountHolder",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetExternalFinancialAccountsByAccountHolder($id: ID!) {\n  node(id: $id) {\n    ... on USPersonAccountHolder {\n      externalFinancialAccounts {\n        edges {\n          cursor\n          node {\n            __typename\n            ... on ExternalFinancialBankAccount {\n              id\n              name\n              externalBankAccountDetails {\n                last4\n                type\n              }\n              accountStatus\n              provider\n              createdAt\n              updatedAt\n            }\n            ... on NonVerifiedExternalUSFinancialBankAccount {\n              id\n              name\n              externalBankAccountDetails {\n                last4\n                type\n              }\n              accountStatus\n            }\n          }\n        }\n      }\n    }\n    ... on USBusinessAccountHolder {\n      externalFinancialAccounts {\n        edges {\n          cursor\n          node {\n            __typename\n            ... on ExternalFinancialBankAccount {\n              id\n              name\n              externalBankAccountDetails {\n                last4\n                type\n              }\n              accountStatus\n              provider\n              createdAt\n              updatedAt\n            }\n            ... on NonVerifiedExternalUSFinancialBankAccount {\n              id\n              name\n              externalBankAccountDetails {\n                last4\n                type\n              }\n              accountStatus\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "variables": {
        "id": "{{personAccountHolderId}}"
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "integrator_initiated_originated_ach",
      "path": "Consumer Charge/Funding/ACH Transfer (& Simulation)/Integrator Initiated (Originated) ACH/Get External Financial Accounts By Account Holder",
      "description": "",
      "tags": [
        "integrator_initiated_originated_ach",
        "retrieval"
      ],
      "requires": [
        "personAccountHolderId"
      ],
      "produces": [
        "externalFinancialAccounts",
        "externalFinancialAccounts"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823545",
    "updated_at": "2025-08-04T16:18:34.823546"
  },
  {
    "name": "SimulateExternallyInitiatedAchTransfer",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation SimulateExternallyInitiatedACHTransfer($input: SimulateExternallyInitiatedACHTransferInput!) {\n  simulateExternallyInitiatedACHTransfer(input: $input) {\n    ... on ExternallyInitiatedACHTransfer {\n      __typename\n      id\n      createdAt\n      amount {\n        value\n      }\n      status {\n        ... on NonFailureExternallyInitiatedACHStatus {\n          status\n        }\n        ... on FailureExternallyInitiatedACHStatus {\n          status\n          statusReasonCode\n        }\n      }\n    }\n    ... on UserError {\n        errors {\n            code\n            description\n            path\n        }\n    }\n  }\n}",
      "variables": {
        "input": {
          "amount": {
            "value": 200000,
            "currencyCode": "USD"
          },
          "companyEntryDescription": "TestDesc",
          "companyIdentifier": "TestID",
          "companyName": "TestName",
          "financialAccountId": "{{financialAccountId}}",
          "individualIdentificationNumber": "TestInDID",
          "individualName": "TestIndName",
          "settlementDate": "2024-02-11",
          "transferType": "CREDIT"
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "externally_initiated_nonoriginated_ach",
      "path": "Consumer Charge/Funding/ACH Transfer (& Simulation)/Externally Initiated (Non-Originated) ACH/Simulate Externally Initiated ACH Transfer",
      "description": "",
      "tags": [
        "externally_initiated_nonoriginated_ach",
        "simulation"
      ],
      "requires": [
        "financialAccountId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823574",
    "updated_at": "2025-08-04T16:18:34.823574"
  },
  {
    "name": "SimulateProcessingExternallyInitiatedStatusChange",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation SimulateProcessingExternallyInitiatedStatusChange($input: SimulateProcessingExternallyInitiatedStatusChangeInput!) {\n  simulateProcessingExternallyInitiatedStatusChange(input: $input) {\n    ... on ExternallyInitiatedACHTransfer {\n      amount {\n        value\n      }\n      status {\n        ... on NonFailureExternallyInitiatedACHStatus {\n          status\n        }\n        ... on FailureExternallyInitiatedACHStatus {\n          status\n          statusReasonCode\n        }\n      }\n    }\n    ... on CreditFunds {\n      amount {\n        value\n      }\n      status {\n        ... on NonFailureExternallyInitiatedACHStatus {\n          status\n        }\n        ... on FailureExternallyInitiatedACHStatus {\n          status\n          statusReasonCode\n        }\n      }\n    }\n    ... on UserError {\n      errors {\n        code\n        description\n        path\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "id": "TRANSFER_ID"
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "externally_initiated_nonoriginated_ach",
      "path": "Consumer Charge/Funding/ACH Transfer (& Simulation)/Externally Initiated (Non-Originated) ACH/Simulate Processing Externally Initiated Status Change",
      "description": "",
      "tags": [
        "externally_initiated_nonoriginated_ach",
        "simulation"
      ],
      "requires": [],
      "produces": [
        "amount",
        "amount",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823591",
    "updated_at": "2025-08-04T16:18:34.823592"
  },
  {
    "name": "SimulateDeposit",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation SimulateDeposit($input: SimulateDepositInput!) {\n  simulateDeposit(input: $input) {\n    ...on Transfer {\n      id\n      status\n      createdAt\n      updatedAt\n      amount {\n        value\n      }\n      ledgers {\n        id\n        name\n        normalBalance\n        financialAccount {\n          id\n        }\n        debitBalance {\n          value\n        }\n        creditBalance {\n          value\n        }\n        ledgerEntries {\n          edges {\n            node {\n              financialEvent {\n                ... on Transfer {\n                  id\n                  amount {\n                    value\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    ...on UserError {\n      errors {\n        code\n        path\n        description\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "toFinancialAccountId": "{{cardProductFundingAccountId}}",
          "source": "WIRE",
          "memo": "Initial Card Funding",
          "amount": {
            "value": 50000000,
            "currencyCode": "USD"
          }
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "ach_transfer_simulation",
      "path": "Consumer Charge/Funding/ACH Transfer (& Simulation)/Simulate Deposit",
      "description": "",
      "tags": [
        "ach_transfer_simulation",
        "simulation"
      ],
      "requires": [
        "cardProductFundingAccountId"
      ],
      "produces": [
        "edges",
        "financialEvent",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823612",
    "updated_at": "2025-08-04T16:18:34.823613"
  },
  {
    "name": "IssueFinancialAccountForApplication",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation IssueFinancialAccountForApplication($input: IssueFinancialAccountForApplicationInput!) {\n  issueFinancialAccountForApplication(input: $input) {\n    ... on FinancialAccount {\n      __typename\n      id\n      name\n      owner {\n        __typename\n      }\n      ledgers {\n        name\n      }\n      features {\n        __typename\n        enabled\n        createdAt\n        updatedAt\n      }\n      directDepositDetails {\n        id\n        restrictedDetails {\n          ... on DirectDepositDetailRestrictedDetails {\n            number\n            routingNumber\n            bank {\n              name\n              address {\n                streetAddress\n                postalCode\n              }\n            }\n          }\n          ... on AccessDeniedError {\n            __typename\n            message\n          }\n        }\n      }\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "applicationId": "{{cardProductApplicationId}}",
          "name": "Credit Account 1"
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "financial_accounts",
      "path": "Consumer Charge/Issuance/Financial Accounts/Issue Financial Account For Application",
      "description": "",
      "tags": [
        "financial_accounts",
        "issuance"
      ],
      "requires": [
        "cardProductApplicationId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823640",
    "updated_at": "2025-08-04T16:18:34.823641"
  },
  {
    "name": "GetFinancialAccount",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetFinancialAccountByID($id: ID!) {\n  node(id: $id) {\n    ... on FinancialAccount {\n      __typename\n      id\n      createdAt\n      name\n      owner {\n        __typename\n      }\n      cardProduct {\n        id\n      }\n      ledgers {\n        id\n        name\n        normalBalance\n        creditBalance {\n          value\n        }\n        debitBalance {\n          value\n        }\n        ledgerEntries {\n          edges {\n            node {\n              __typename\n              id\n              createdAt\n              amount {\n                value\n                currencyCode\n              }\n              financialEvent {\n                ... on Transfer {\n                  amount {\n                    value\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      features {\n        __typename\n        enabled\n        createdAt\n        updatedAt\n      }\n      directDepositDetails {\n        id\n        restrictedDetails {\n          ... on DirectDepositDetailRestrictedDetails {\n            number\n            routingNumber\n            bank {\n              name\n              address {\n                streetAddress\n                postalCode\n              }\n            }\n          }\n          ... on AccessDeniedError {\n            message\n          }\n        }\n      }\n    }\n  }\n}\n",
      "variables": {
        "id": "{{financialAccountId}}"
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "financial_accounts",
      "path": "Consumer Charge/Issuance/Financial Accounts/Get Financial Account",
      "description": "",
      "tags": [
        "financial_accounts",
        "retrieval"
      ],
      "requires": [
        "financialAccountId"
      ],
      "produces": [
        "edges",
        "amount"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823663",
    "updated_at": "2025-08-04T16:18:34.823664"
  },
  {
    "name": "SetCreditLimitForFinancialAccount",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation InitiateFinancialAccountCreditLimitUpdateFromProductFunding($input: InitiateFinancialAccountCreditLimitUpdateFromProductFundingInput!) {\n  initiateFinancialAccountCreditLimitUpdateFromProductFunding(input: $input) {\n    ... on FinancialAccountCreditLimitUpdateFromProductFunding {\n      id\n      createdAt\n      updatedAt\n      amount {\n        value\n        currencyCode\n      }\n      status\n      statusReason\n      memo\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "financialAccountId": "{{financialAccountId}}",
          "amount": {
            "value": 100000,
            "currencyCode": "USD"
          },
          "memo": "Set Credit Limit $1000"
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.6.0",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "credit_limit",
      "path": "Consumer Charge/Issuance/Credit Limit/Set Credit Limit For Financial Account",
      "description": "",
      "tags": [
        "credit_limit"
      ],
      "requires": [
        "financialAccountId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823684",
    "updated_at": "2025-08-04T16:18:34.823685"
  },
  {
    "name": "GetFinancialAccountCreditLimitUpdate",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetFinancialAccountCreditLimitUpdate($id: ID!) {\n  node(id: $id) {\n    ... on FinancialAccountCreditLimitUpdateFromProductFunding {\n      id\n      status\n      statusReason\n      amount {\n        value\n      }\n      memo\n      ledgers {\n        name\n        debitBalance {\n          value\n        }\n        creditBalance {\n          value\n        }\n        financialAccount {\n          name\n        }\n      }\n      createdAt\n      updatedAt\n    }\n  }\n}",
      "variables": {
        "id": "{{financialAccountCreditLimitUpdateId}}"
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.6.0",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "credit_limit",
      "path": "Consumer Charge/Issuance/Credit Limit/Get Financial Account Credit Limit Update",
      "description": "",
      "tags": [
        "credit_limit",
        "modification",
        "retrieval"
      ],
      "requires": [
        "financialAccountCreditLimitUpdateId"
      ],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823702",
    "updated_at": "2025-08-04T16:18:34.823702"
  },
  {
    "name": "IssuePaymentCardForFinancialAccount",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation IssuePaymentCardForFinancialAccount($input: IssuePaymentCardForFinancialAccountInput!) {\n  issuePaymentCardForFinancialAccount(input: $input) {\n    ... on PaymentCard {\n      id\n      bin\n      last4\n      expirationDate\n      network\n      status\n      formFactor\n      financialAccounts {\n        ledgers {\n          normalBalance\n          creditBalance {\n            value\n          }\n          debitBalance {\n            value\n          }\n        }\n      }\n      cardProductApplication {\n\t\t\t\t... on AccountHolderCardProductApplication {\n\t\t\t\t\tid\n\t\t\t\t\tapplicationState {\n\t\t\t\t\t\tstatus\n\t\t\t\t\t}\n\t\t\t\t\taccountHolderSnapshot {\n\t\t\t\t\t\t__typename\n\t\t\t\t\t\t... on USPersonAccountHolderSnapshot {\n\t\t\t\t\t\t\tname {\n\t\t\t\t\t\t\t\tgivenName\n\t\t\t\t\t\t\t\tfamilyName\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbillingAddress {\n\t\t\t\t\t\t\t\tstreetAddress\n\t\t\t\t\t\t\t\tlocality\n\t\t\t\t\t\t\t\tpostalCode\n\t\t\t\t\t\t\t\tcountryCodeAlpha3\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcurrentVerification {\n\t\t\t\t\t\t\t\tstatus\n\t\t\t\t\t\t\t\treason\n\t\t\t\t\t\t\t\tresults {\n\t\t\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t\t\tdescription\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n        }\n      }\n      \n      restrictedDetails {\n        ... on PaymentCardRestrictedDetails {\n          cvv\n          number\n        }\n        ... on AccessDeniedError {\n          message\n        }\n      }\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "financialAccountId": "{{financialAccountId}}",
          "options": {
            "activateOnCreate": false,
            "expirationDate": "2026-01-01T23:59:59Z"
          }
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "payment_cards",
      "path": "Consumer Charge/Issuance/Payment Cards/Issue Payment Card For Financial Account",
      "description": "",
      "tags": [
        "payment_cards",
        "issuance"
      ],
      "requires": [
        "financialAccountId"
      ],
      "produces": [
        "ledgers",
        "name",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823728",
    "updated_at": "2025-08-04T16:18:34.823729"
  },
  {
    "name": "ActivatePaymentCard",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation ActivatePaymentCard($input: ActivatePaymentCardInput!) {\n  activatePaymentCard(input: $input) {\n    ... on PaymentCard {\n      id\n      status\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "paymentCardId": "{{paymentCardId}}"
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "payment_cards",
      "path": "Consumer Charge/Issuance/Payment Cards/Activate Payment Card",
      "description": "",
      "tags": [
        "payment_cards",
        "activation"
      ],
      "requires": [
        "paymentCardId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823741",
    "updated_at": "2025-08-04T16:18:34.823741"
  },
  {
    "name": "SuspendPaymentCard",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation SuspendPaymentCard($input: SuspendPaymentCardInput!) {\n  suspendPaymentCard(input: $input) {\n    ...on PaymentCard {\n      id\n      status\n    }\n    ...on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "paymentCardId": "{{paymentCardId}}"
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "payment_cards",
      "path": "Consumer Charge/Issuance/Payment Cards/Suspend Payment Card",
      "description": "",
      "tags": [
        "payment_cards",
        "suspension"
      ],
      "requires": [
        "paymentCardId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823753",
    "updated_at": "2025-08-04T16:18:34.823754"
  },
  {
    "name": "ReissuePaymentCard",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation ReissuePaymentCard($input: ReissuePaymentCardInput!) {\n  reissuePaymentCard(input: $input) {\n    ... on PaymentCard {\n      id\n      bin\n      last4\n      physicalPaymentCardOrders {\n        id\n      }\n      status\n    }\n    ... on UserError {\n      errors {\n        code\n        description\n        path\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "options": {
            "reissueFeatures": {
              "copyNumber": true
            },
            "expirationDate": "2026-12-29T23:12:30Z",
            "activateOnCreate": false
          },
          "originalPaymentCardId": "{{paymentCardId}}"
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "payment_cards",
      "path": "Consumer Charge/Issuance/Payment Cards/Reissue Payment Card",
      "description": "",
      "tags": [
        "payment_cards",
        "issuance"
      ],
      "requires": [
        "paymentCardId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823769",
    "updated_at": "2025-08-04T16:18:34.823769"
  },
  {
    "name": "ClosePaymentCard",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation ClosePaymentCard($input: ClosePaymentCardInput!) {\n  closePaymentCard(input: $input) {\n    ...on PaymentCard {\n      id\n      status\n    }\n    ...on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "paymentCardId": "{{paymentCardId}}"
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "payment_cards",
      "path": "Consumer Charge/Issuance/Payment Cards/Close Payment Card",
      "description": "",
      "tags": [
        "payment_cards"
      ],
      "requires": [
        "paymentCardId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823781",
    "updated_at": "2025-08-04T16:18:34.823781"
  },
  {
    "name": "GetPaymentCard",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetPaymentCard($id: ID!) {\n    node(id: $id) {\n        ... on PaymentCard {\n            id\n            status\n            last4\n            expirationYear\n            expirationMonth\n        }\n    }\n}",
      "variables": {
        "id": "{{paymentCardId}}"
      }
    },
    "headers": {},
    "metadata": {
      "category": "payment_cards",
      "path": "Consumer Charge/Issuance/Payment Cards/Get Payment Card",
      "description": "",
      "tags": [
        "payment_cards",
        "retrieval"
      ],
      "requires": [
        "paymentCardId"
      ],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823791",
    "updated_at": "2025-08-04T16:18:34.823792"
  },
  {
    "name": "SimulateAuthorization",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation SimulateAuthorization(\n  $input: SimulateAuthorizationInput!\n) {\n  simulateAuthorization(input: $input) {\n    ... on AuthorizationEvent {\n      id\n      responseCode\n      cvvResponseCode\n      transaction {\n        ... on CreditTransaction {\n          id\n        }\n        ... on DebitTransaction {\n          id\n        }\n      }\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "amount": {
            "value": 1000,
            "currencyCode": "USD"
          },
          "cardId": "{{paymentCardId}}"
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "simulation",
      "path": "Consumer Charge/Issuance/Transactions/Simulation/Simulate Authorization",
      "description": "",
      "tags": [
        "simulation",
        "simulation"
      ],
      "requires": [
        "paymentCardId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823811",
    "updated_at": "2025-08-04T16:18:34.823812"
  },
  {
    "name": "SimulateClearing",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation SimulateClearing($input: SimulateClearingInput!) {\n  simulateClearing(input: $input) {\n    ... on ClearingEvent {\n      id\n      transaction {\n        ...on Node {\n          id\n        }\n      }\n      responseCode\n      merchantDetails {\n        countryCodeAlpha3\n        category\n        name\n        description\n      }\n    }\n    ...on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "transactionId": "{{transactionId}}"
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "simulation",
      "path": "Consumer Charge/Issuance/Transactions/Simulation/Simulate Clearing",
      "description": "",
      "tags": [
        "simulation",
        "simulation"
      ],
      "requires": [
        "transactionId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823825",
    "updated_at": "2025-08-04T16:18:34.823825"
  },
  {
    "name": "SimulateReversal",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation SimulateReversal($input: SimulateReversalInput!) {\n  simulateReversal(input: $input) {\n    ... on ReversalEvent {\n      id\n      transaction {\n        ...on Node {\n          id\n        }\n      }\n      responseCode\n    }\n    ...on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "transactionId": "{{transactionId}}"
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "simulation",
      "path": "Consumer Charge/Issuance/Transactions/Simulation/Simulate Reversal",
      "description": "",
      "tags": [
        "simulation",
        "simulation"
      ],
      "requires": [
        "transactionId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823837",
    "updated_at": "2025-08-04T16:18:34.823838"
  },
  {
    "name": "SimulateRefund",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation SimulateRefund($input: SimulateRefundInput!) {\n  simulateRefund(input: $input) {\n    ... on ClearingEvent {\n      id\n      transaction {\n        ... on Node {\n          id\n        }\n      }\n      responseCode\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}\n",
      "variables": {
        "input": {
          "transactionId": "{{transactionId}}",
          "amount": {
            "value": 10000,
            "currencyCode": "USD"
          }
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "simulation",
      "path": "Consumer Charge/Issuance/Transactions/Simulation/Simulate Refund",
      "description": "",
      "tags": [
        "simulation",
        "simulation"
      ],
      "requires": [
        "transactionId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823851",
    "updated_at": "2025-08-04T16:18:34.823852"
  },
  {
    "name": "SimulateSingleStepAuthAndClear",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation SimulateSingleStepAuthAndClear($input: SimulateSingleStepAuthAndClearInput!) {\n  simulateSingleStepAuthAndClear(input: $input) {\n    ... on AuthorizationAndClearEvent {\n      id\n      responseCode\n      transaction {\n        ... on DebitTransaction {\n          id\n        }\n        ... on CreditTransaction {\n          id\n        }\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "cardId": "{{paymentCardId}}",
          "amount": {
            "currencyCode": "USD",
            "value": 1000
          },
          "merchantDetails": {
            "description": "Test Merchant",
            "name": "Test Merchant Name"
          }
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "simulation",
      "path": "Consumer Charge/Issuance/Transactions/Simulation/Simulate Single Step Auth And Clear",
      "description": "",
      "tags": [
        "simulation",
        "simulation"
      ],
      "requires": [
        "paymentCardId"
      ],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823869",
    "updated_at": "2025-08-04T16:18:34.823870"
  },
  {
    "name": "GetTransactionEvent",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetTransactionEvent($id: ID!) {\n  node(id: $id) {\n    ... on TransactionEvent {\n    __typename\n    id\n    approvedAmount {\n      currencyCode\n      value\n    }\n    responseCode\n    createdAt\n    transactionProcessingType\n    pointOfServiceDetails {\n      category\n      panEntryMode\n      pinEntryMode\n      terminalAttendance\n      isCardHolderPresent\n      isCardPresent\n      isRecurring\n      terminalSupportsPartialApproval\n    }\n    additionalNetworkData {\n      ... on VisaData {\n        transactionIdentifier\n      }\n    }\n  }\n}}",
      "variables": {
        "id": "{{authorizationEventId}}"
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "transactions",
      "path": "Consumer Charge/Issuance/Transactions/Get Transaction Event",
      "description": "",
      "tags": [
        "transactions",
        "retrieval"
      ],
      "requires": [
        "authorizationEventId"
      ],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823884",
    "updated_at": "2025-08-04T16:18:34.823885"
  },
  {
    "name": "TransactionEventsByPaymentCardAndTransactionid",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query TransactionEventsByPaymentCardAndTransactionId($id: ID!, $filterBy: PaymentCardTransactionEventsFilterInput) {\n  node(id: $id) {\n    ... on PaymentCard {\n      id\n      transactionEvents(filterBy: $filterBy) {\n        edges {\n          node {\n            __typename\n            id\n            createdAt\n            responseCode\n            approvedAmount {\n              value\n              currencyCode\n            }\n            transaction {\n              ... on CreditTransaction {\n                __typename\n                id\n              }\n              ... on DebitTransaction {\n                __typename\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}",
      "variables": {
        "id": "{{paymentCardId}}",
        "filterBy": {
          "transactionId": {
            "equals": "{{transactionId}}"
          }
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "transactions",
      "path": "Consumer Charge/Issuance/Transactions/Transaction Events By Payment Card And TransactionId",
      "description": "",
      "tags": [
        "transactions"
      ],
      "requires": [
        "paymentCardId",
        "transactionId"
      ],
      "produces": [
        "edges"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823904",
    "updated_at": "2025-08-04T16:18:34.823905"
  },
  {
    "name": "CreateMerchantCategorySpendRule",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation CreateMerchantCategorySpendRule(\n  $input: CreateMerchantCategorySpendRuleInput!\n) {\n  createMerchantCategorySpendRule(input: $input) {\n    __typename\n    ... on MerchantCategorySpendRule {\n      id\n      name\n      version\n      allowed\n      blocked\n      createdAt\n      updatedAt\n    }\n    ... on UserError {\n      errors {\n        code\n        path\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "name": "Fuel Rule",
          "allowed": [
            "AUTOMATED_FUEL_DISPENSERS"
          ],
          "blocked": [
            "AIRLINES_AIR_CARRIERS"
          ]
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "spend_rules",
      "path": "Consumer Charge/Issuance/Authorization Controls/Spend Rules/Create Merchant Category Spend Rule",
      "description": "",
      "tags": [
        "spend_rules",
        "creation"
      ],
      "requires": [],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823927",
    "updated_at": "2025-08-04T16:18:34.823927"
  },
  {
    "name": "AttachSpendRuleToCardProduct",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation AttachSpendRuleToCardProduct($input: AttachSpendRuleToCardProductInput!) {\n  attachSpendRuleToCardProduct(input: $input) {\n    ...on CardProduct {\n      id\n      attachedSpendRules {\n        edges {\n          node {\n            ...on SpendRule {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n    ... on UserError {\n      errors {\n        code\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "cardProductId": "{{cardProductId}}",
          "spendRule": {
            "id": "{{merchantCategorySpendRuleId}}",
            "version": "LATEST"
          }
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "spend_rules",
      "path": "Consumer Charge/Issuance/Authorization Controls/Spend Rules/Attach Spend Rule To Card Product",
      "description": "",
      "tags": [
        "spend_rules"
      ],
      "requires": [
        "merchantCategorySpendRuleId",
        "cardProductId"
      ],
      "produces": [
        "edges",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823945",
    "updated_at": "2025-08-04T16:18:34.823945"
  },
  {
    "name": "UpdateMerchantCategorySpendRule",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation UpdateMerchantCategorySpendRule(\n  $input: UpdateMerchantCategorySpendRuleInput!\n) {\n  updateMerchantCategorySpendRule(input: $input) {\n    __typename\n    ... on MerchantCategorySpendRule {\n      id\n      name\n      version\n      allowed\n      blocked\n      createdAt\n      updatedAt\n    }\n    ... on UserError {\n      errors {\n        code\n        path\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "spendRuleId": "{{merchantCategorySpendRuleId}}",
          "allowed": [
            "AUTOMATED_FUEL_DISPENSERS"
          ],
          "blocked": []
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "spend_rules",
      "path": "Consumer Charge/Issuance/Authorization Controls/Spend Rules/Update Merchant Category Spend Rule",
      "description": "",
      "tags": [
        "spend_rules",
        "modification"
      ],
      "requires": [
        "merchantCategorySpendRuleId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823961",
    "updated_at": "2025-08-04T16:18:34.823962"
  },
  {
    "name": "AttachSpendRuleToPaymentCard",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation AttachSpendRuleToPaymentCard($input: AttachSpendRuleToPaymentCardInput!) {\n  attachSpendRuleToPaymentCard(input: $input) {\n    ...on PaymentCard {\n      id\n      attachedSpendRules {\n        edges {\n          node {\n            ...on SpendRule {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n    ... on UserError {\n      errors {\n        code\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "paymentCardId": "{{paymentCardId}}",
          "spendRule": {
            "id": "{{merchantCategorySpendRuleId}}",
            "version": "LATEST"
          }
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "spend_rules",
      "path": "Consumer Charge/Issuance/Authorization Controls/Spend Rules/Attach Spend Rule To Payment Card",
      "description": "",
      "tags": [
        "spend_rules"
      ],
      "requires": [
        "paymentCardId",
        "merchantCategorySpendRuleId"
      ],
      "produces": [
        "edges",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823978",
    "updated_at": "2025-08-04T16:18:34.823979"
  },
  {
    "name": "DetachSpendRuleFromCardProduct",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation DetachSpendRuleFromCardProduct($input: DetachSpendRuleFromCardProductInput!) {\n  detachSpendRuleFromCardProduct(input: $input) {\n    __typename\n\t\t... on CardProduct {\n\t\t\tid\n\t\t}\n    ... on UserError {\n      errors {\n        code\n        path\n        description\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "cardProductId": "{{cardProductId}}",
          "spendRule": {
            "id": "{{merchantCategorySpendRuleId}}"
          }
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "spend_rules",
      "path": "Consumer Charge/Issuance/Authorization Controls/Spend Rules/Detach Spend Rule From Card Product",
      "description": "",
      "tags": [
        "spend_rules"
      ],
      "requires": [
        "merchantCategorySpendRuleId",
        "cardProductId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.823993",
    "updated_at": "2025-08-04T16:18:34.823994"
  },
  {
    "name": "DetachSpendRuleFromPaymentCard",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation DetachSpendRuleFromPaymentCard($input: DetachSpendRuleFromPaymentCardInput!) {\n  detachSpendRuleFromPaymentCard(input: $input) {\n    __typename\n\t\t... on PaymentCard {\n\t\t\tid\n\t\t}\n    ... on UserError {\n      errors {\n        code\n        path\n        description\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "paymentCardId": "{{paymentCardId}}",
          "spendRule": {
            "id": "{{merchantCategorySpendRuleId}}"
          }
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "spend_rules",
      "path": "Consumer Charge/Issuance/Authorization Controls/Spend Rules/Detach Spend Rule From Payment Card",
      "description": "",
      "tags": [
        "spend_rules"
      ],
      "requires": [
        "paymentCardId",
        "merchantCategorySpendRuleId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824008",
    "updated_at": "2025-08-04T16:18:34.824008"
  },
  {
    "name": "GetAllVelocityRules",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetAllVelocityRules {\n  organizations {\n    velocityRules {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          id\n          name\n          velocityRuleWindow\n          version\n          createdAt\n          updatedAt\n          cumulativeRule {\n            ... on AmountLimitSpendRule {\n              id\n              name\n              maximumAmount {\n                value\n                currencyCode\n              }\n              version\n              createdAt\n              updatedAt\n            }\n          }\n          spendRules {\n            __typename\n            id\n            name\n            version\n            createdAt\n            updatedAt\n          }\n        }\n      }\n    }\n  }\n}",
      "variables": {}
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "velocity_rules",
      "path": "Consumer Charge/Issuance/Authorization Controls/Velocity Rules/Get All Velocity Rules",
      "description": "",
      "tags": [
        "velocity_rules",
        "retrieval"
      ],
      "requires": [],
      "produces": [
        "organizations",
        "pageInfo"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824026",
    "updated_at": "2025-08-04T16:18:34.824026"
  },
  {
    "name": "GetPaymentCardVelocityRule",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetPaymentCardVelocityRule($id: ID!) {\n  node(id: $id) {\n    ... on PaymentCard {\n      id\n      bin\n      last4\n      velocitySpendRuleBalances {\n\t\t\t\t... on VelocitySpendRuleAmountBalance {\n\t\t\t\t\tcurrentBalance {\n\t\t\t\t\t\u00cf\tvalue\n\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t}\n\t\t\t\t\tremainingBalance {\n\t\t\t\t\t\tvalue\n\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t}\n\t\t\t\t\tvelocityRule {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tname\n\t\t\t\t\t\tvelocityRuleWindow\n\t\t\t\t\t\tcumulativeRule {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\tversion\n\t\t\t\t\t\t\tcreatedAt\n\t\t\t\t\t\t\tupdatedAt\n\t\t\t\t\t\t\trevisions {\n\t\t\t\t\t\t\t\tpageInfo {\n\t\t\t\t\t\t\t\t\thasNextPage\n\t\t\t\t\t\t\t\t\thasPreviousPage\n\t\t\t\t\t\t\t\t\tstartCursor\n\t\t\t\t\t\t\t\t\tendCursor\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\tcursor\n\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\tversion\n\t\t\t\t\t\t\t\t\t\tcreatedAt\n\t\t\t\t\t\t\t\t\t\tupdatedAt\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tspendRules {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\tversion\n\t\t\t\t\t\t\tcreatedAt\n\t\t\t\t\t\t\tupdatedAt\n\t\t\t\t\t\t}\n\t\t\t\t\t\tversion\n\t\t\t\t\t\tcreatedAt\n\t\t\t\t\t\tupdatedAt\n\t\t\t\t\t}\n\t\t\t\t}\n    \t}\n  \t}\n\t}\n}",
      "variables": {
        "id": "{{paymentCardId}}"
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "velocity_rules",
      "path": "Consumer Charge/Issuance/Authorization Controls/Velocity Rules/Get Payment Card Velocity Rule",
      "description": "",
      "tags": [
        "velocity_rules",
        "retrieval"
      ],
      "requires": [
        "paymentCardId"
      ],
      "produces": [
        "currentBalance",
        "pageInfo"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824042",
    "updated_at": "2025-08-04T16:18:34.824042"
  },
  {
    "name": "GetFinancialAccountWithVelocityBalance",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetFinancialAccountWithVelocityBalance($id: ID!) {\n  node(id: $id) {\n    __typename\n    ... on FinancialAccount {\n      id\n      velocitySpendRuleBalances {\n        ... on VelocitySpendRuleAmountBalance {\n          __typename\n\n          currentBalance {\n            currencyCode\n            value\n          }\n          remainingBalance {\n            currencyCode\n            value\n          }\n          velocityRule {\n            id\n            version\n            name\n          }\n        }\n      }\n    }\n  }\n}\n\n",
      "variables": {
        "id": "{{financialAccountId}}"
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "velocity_rules",
      "path": "Consumer Charge/Issuance/Authorization Controls/Velocity Rules/Get Financial Account With Velocity Balance",
      "description": "",
      "tags": [
        "velocity_rules",
        "retrieval"
      ],
      "requires": [
        "financialAccountId"
      ],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824059",
    "updated_at": "2025-08-04T16:18:34.824060"
  },
  {
    "name": "CreateVelocityRule",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation CreateVelocityRule($input: CreateVelocityRuleInput!) {\n  createVelocityRule(input: $input) {\n    ... on VelocityRule {\n      id\n      name\n      velocityRuleWindow\n      cumulativeRule {\n        id\n        name\n        version\n        createdAt\n        updatedAt\n        revisions {\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n            startCursor\n            endCursor\n          }\n          edges {\n            cursor\n            node {\n              id\n              name\n              version\n              createdAt\n              updatedAt\n            }\n          }\n        }\n      }\n      spendRules {\n        id\n        name\n        version\n        createdAt\n        updatedAt\n      }\n      version\n      createdAt\n      updatedAt\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "name": "Test Velocity Control - Max $1000 per month",
          "cumulativeRule": {
            "id": "{{amountLimitSpendRuleId}}",
            "version": "0"
          },
          "velocityRuleWindow": "MONTHLY"
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "velocity_rules",
      "path": "Consumer Charge/Issuance/Authorization Controls/Velocity Rules/Create Velocity Rule",
      "description": "",
      "tags": [
        "velocity_rules",
        "creation"
      ],
      "requires": [
        "amountLimitSpendRuleId"
      ],
      "produces": [
        "pageInfo",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824077",
    "updated_at": "2025-08-04T16:18:34.824078"
  },
  {
    "name": "CreateAmountLimitSpendRule",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation CreateAmountLimitSpendRule($input: CreateAmountLimitSpendRuleInput!) {\n  createAmountLimitSpendRule(input: $input) {\n    ... on AmountLimitSpendRule {\n      id\n      name\n      maximumAmount {\n        value\n        currencyCode\n      }\n      updatedAt\n      createdAt\n      version\n      revisions {\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        edges {\n          cursor\n          node {\n            id\n            name\n            version\n          }\n        }\n      }\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "name": "Test Amount Limit Rule",
          "maximumAmount": {
            "value": 100000,
            "currencyCode": "USD"
          }
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "velocity_rules",
      "path": "Consumer Charge/Issuance/Authorization Controls/Velocity Rules/Create Amount Limit Spend Rule",
      "description": "",
      "tags": [
        "velocity_rules",
        "creation"
      ],
      "requires": [],
      "produces": [
        "pageInfo",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824098",
    "updated_at": "2025-08-04T16:18:34.824098"
  },
  {
    "name": "AttachPaymentCardVelocityRule",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation AttachPaymentCardVelocityRule($input: AttachPaymentCardVelocityRuleInput!) {\n  attachPaymentCardVelocityRule(input: $input) {\n    ... on VelocityRuleAssociation {\n      velocityRule {\n        id\n        name\n        velocityRuleWindow\n        cumulativeRule {\n          id\n          name\n          version\n          createdAt\n          updatedAt\n          revisions {\n            pageInfo {\n              hasNextPage\n              hasPreviousPage\n              startCursor\n              endCursor\n            }\n            edges {\n              cursor\n              node {\n                id\n                name\n                version\n                createdAt\n                updatedAt\n              }\n            }\n          }\n        }\n        spendRules {\n          id\n          name\n          version\n          createdAt\n          updatedAt\n        }\n        version\n        createdAt\n        updatedAt\n      }\n      name\n      associatedTo {\n        ... on PaymentCard {\n          id,\n          bin,\n          last4\n        }\n      }\n      version\n      createdAt\n      updatedAt\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "paymentCardId": "{{paymentCardId}}",
          "velocityRule": {
            "velocityRuleId": "{{monthlyAmountLimitVelocityRuleId}}",
            "version": "LATEST"
          }
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "velocity_rules",
      "path": "Consumer Charge/Issuance/Authorization Controls/Velocity Rules/Attach Payment Card Velocity Rule",
      "description": "",
      "tags": [
        "velocity_rules"
      ],
      "requires": [
        "paymentCardId",
        "monthlyAmountLimitVelocityRuleId"
      ],
      "produces": [
        "velocityRule",
        "pageInfo",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824119",
    "updated_at": "2025-08-04T16:18:34.824119"
  },
  {
    "name": "DetachPaymentCardVelocityRule",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation DetachPaymentCardVelocityRule($input: DetachPaymentCardVelocityRuleInput!) {\n  detachPaymentCardVelocityRule(input: $input) {\n    ... on VelocityRuleAssociation {\n      velocityRule {\n        id\n        name\n        velocityRuleWindow\n        cumulativeRule {\n          id\n          name\n          version\n          createdAt\n          updatedAt\n          revisions {\n            pageInfo {\n              hasNextPage\n              hasPreviousPage\n              startCursor\n              endCursor\n            }\n            edges {\n              cursor\n              node {\n                id\n                name\n                version\n                createdAt\n                updatedAt\n              }\n            }\n          }\n        }\n        spendRules {\n          id\n          name\n          version\n          createdAt\n          updatedAt\n        }\n        version\n        createdAt\n        updatedAt\n      }\n      name\n      associatedTo {\n        ... on PaymentCard {\n          id\n          bin\n          last4\n        }\n      }\n      version\n      createdAt\n      updatedAt\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "paymentCardId": "{{paymentCardId}}",
          "velocityRule": {
            "velocityRuleId": "{{monthlyAmountLimitVelocityRuleId}}",
            "version": "LATEST"
          }
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "velocity_rules",
      "path": "Consumer Charge/Issuance/Authorization Controls/Velocity Rules/Detach Payment Card Velocity Rule",
      "description": "",
      "tags": [
        "velocity_rules"
      ],
      "requires": [
        "paymentCardId",
        "monthlyAmountLimitVelocityRuleId"
      ],
      "produces": [
        "velocityRule",
        "pageInfo",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824139",
    "updated_at": "2025-08-04T16:18:34.824139"
  },
  {
    "name": "AttachCardProductVelocityRule",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation AttachCardProductVelocityRule($input: AttachCardProductVelocityRuleInput!) {\n  attachCardProductVelocityRule(input: $input) {\n    ... on VelocityRuleAssociation {\n      velocityRule {\n        id\n        name\n        velocityRuleWindow\n        cumulativeRule {\n          id\n          name\n          version\n          createdAt\n          updatedAt\n          revisions {\n            pageInfo {\n              hasNextPage\n              hasPreviousPage\n              startCursor\n              endCursor\n            }\n            edges {\n              cursor\n              node {\n                id\n                name\n                version\n                createdAt\n                updatedAt\n              }\n            }\n          }\n        }\n        spendRules {\n          id\n          name\n          version\n          createdAt\n          updatedAt\n        }\n        version\n        createdAt\n        updatedAt\n      }\n      name\n      associatedTo {\n        ... on CardProduct {\n          id\n          name\n        }\n      }\n      version\n      createdAt\n      updatedAt\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "cardProductId": "{{cardProductId}}",
          "velocityRule": {
            "velocityRuleId": "{{monthlyAmountLimitVelocityRuleId}}",
            "version": "LATEST"
          }
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "velocity_rules",
      "path": "Consumer Charge/Issuance/Authorization Controls/Velocity Rules/Attach Card Product Velocity Rule",
      "description": "",
      "tags": [
        "velocity_rules"
      ],
      "requires": [
        "cardProductId",
        "monthlyAmountLimitVelocityRuleId"
      ],
      "produces": [
        "velocityRule",
        "pageInfo",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824158",
    "updated_at": "2025-08-04T16:18:34.824159"
  },
  {
    "name": "DetachCardProductVelocityRule",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation DetachCardProductVelocityRule($input: DetachCardProductVelocityRuleInput!) {\n  detachCardProductVelocityRule(input: $input) {\n    ... on VelocityRuleAssociation {\n      velocityRule {\n        id\n        name\n        velocityRuleWindow\n        cumulativeRule {\n          id\n          name\n          version\n          createdAt\n          updatedAt\n          revisions {\n            pageInfo {\n              hasNextPage\n              hasPreviousPage\n              startCursor\n              endCursor\n            }\n            edges {\n              cursor\n              node {\n                id\n                name\n                version\n                createdAt\n                updatedAt\n              }\n            }\n          }\n        }\n        spendRules {\n          id\n          name\n          version\n          createdAt\n          updatedAt\n        }\n        version\n        createdAt\n        updatedAt\n      }\n      name\n      associatedTo {\n        ... on CardProduct {\n          id\n          name\n        }\n      }\n      version\n      createdAt\n      updatedAt\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "cardProductId": "{{cardProductId}}",
          "velocityRule": {
            "velocityRuleId": "{{monthlyAmountLimitVelocityRuleId}}",
            "version": "LATEST"
          }
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "velocity_rules",
      "path": "Consumer Charge/Issuance/Authorization Controls/Velocity Rules/Detach Card Product Velocity Rule",
      "description": "",
      "tags": [
        "velocity_rules"
      ],
      "requires": [
        "cardProductId",
        "monthlyAmountLimitVelocityRuleId"
      ],
      "produces": [
        "velocityRule",
        "pageInfo",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824179",
    "updated_at": "2025-08-04T16:18:34.824179"
  },
  {
    "name": "GetCollaborativeAuthorizationEndpoint",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query FindCollaborativeAuthorizationEndpoint($id: ID!) {\n  node(id: $id) {\n    ...on CollaborativeAuthorizationEndpoint {\n      id\n      name\n      uri\n      createdAt\n      status\n      updatedAt\n      signingKeys {\n        id\n        secret\n      }\n    }\n  }\n}",
      "variables": {
        "id": "{{collaborativeAuthEndpointId}}"
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "collaborative_authorization",
      "path": "Consumer Charge/Issuance/Authorization Controls/Collaborative Authorization/Get Collaborative Authorization Endpoint",
      "description": "",
      "tags": [
        "collaborative_authorization",
        "retrieval"
      ],
      "requires": [
        "collaborativeAuthEndpointId"
      ],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824194",
    "updated_at": "2025-08-04T16:18:34.824195"
  },
  {
    "name": "GetCollaborativeAuthorizationEndpoints",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query CollaborativeAuthorizationEndpoints($after: String, $first: Int) {\n\torganizations{\n\t\tid\n\t\tcollaborativeAuthorizationEndpoints(first: $first, after: $after) {\n\t\t\t__typename\n\n\t\t\tedges {\n\t\t\t\t__typename\n\t\t\t\tcursor\n\t\t\t\tnode {\n\t\t\t\t\t__typename\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\turi\n\t\t\t\t\tcreatedAt\n\t\t\t\t\tupdatedAt\n\t\t\t\t\tsigningKeys {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tsecret\n\t\t\t\t\t\tcreatedAt\n\t\t\t\t\t}\n\t\t\t\t\tstatus\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpageInfo {\n\t\t\t\tendCursor\n\t\t\t\thasNextPage\n\t\t\t\thasPreviousPage\n\t\t\t\tstartCursor\n\t\t\t}\n\t\t}\n\t}\n}\n",
      "variables": {}
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "collaborative_authorization",
      "path": "Consumer Charge/Issuance/Authorization Controls/Collaborative Authorization/Get Collaborative Authorization Endpoints",
      "description": "",
      "tags": [
        "collaborative_authorization",
        "retrieval"
      ],
      "requires": [],
      "produces": [
        "organizations"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824207",
    "updated_at": "2025-08-04T16:18:34.824208"
  },
  {
    "name": "AddCollaborativeAuthorizationEndpoint",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation AddCollaborativeAuthorizationEndpoint($input: AddCollaborativeAuthorizationEndpointInput!) {\n  addCollaborativeAuthorizationEndpoint(input: $input) {\n    __typename\n    ... on  CollaborativeAuthorizationEndpoint{\n      id\n      name\n      uri\n      createdAt\n      status\n      updatedAt\n      signingKeys {\n        id\n        secret\n      }\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "name": "Test Collaborative Auth Endpoint",
          "uri": "COLLAB_AUTH_ENDPOINT_URL"
        }
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "collaborative_authorization",
      "path": "Consumer Charge/Issuance/Authorization Controls/Collaborative Authorization/Add Collaborative Authorization Endpoint",
      "description": "",
      "tags": [
        "collaborative_authorization"
      ],
      "requires": [],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824227",
    "updated_at": "2025-08-04T16:18:34.824228"
  },
  {
    "name": "ActivateCollaborativeAuthorizationEndpoint",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation ActivateCollaborativeAuthorizationEndpoint($input: ActivateCollaborativeAuthorizationEndpointInput!) {\n  activateCollaborativeAuthorizationEndpoint(input: $input) {\n    __typename\n    ...on CollaborativeAuthorizationEndpoint {\n      id\n      name\n      uri\n      createdAt\n      status\n      updatedAt\n      signingKeys {\n        id\n        secret\n      }\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "endpointId": "{{collaborativeAuthEndpointId}}"
        }
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "collaborative_authorization",
      "path": "Consumer Charge/Issuance/Authorization Controls/Collaborative Authorization/Activate Collaborative Authorization Endpoint",
      "description": "",
      "tags": [
        "collaborative_authorization",
        "activation"
      ],
      "requires": [
        "collaborativeAuthEndpointId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824242",
    "updated_at": "2025-08-04T16:18:34.824242"
  },
  {
    "name": "DeactivateCollaborativeAuthorizationEndpoint",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation DeactivateCollaborativeAuthorizationEndpoint($input: DeactivateCollaborativeAuthorizationEndpointInput!) {\n  deactivateCollaborativeAuthorizationEndpoint(input: $input) {\n    __typename\n    ...on  CollaborativeAuthorizationEndpoint {\n      id\n      name\n      uri\n      createdAt\n      status\n      updatedAt\n      signingKeys {\n        id\n        secret\n      }\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "endpointId": "{{collaborativeAuthEndpointId}}"
        }
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "collaborative_authorization",
      "path": "Consumer Charge/Issuance/Authorization Controls/Collaborative Authorization/Deactivate Collaborative Authorization Endpoint",
      "description": "",
      "tags": [
        "collaborative_authorization",
        "activation"
      ],
      "requires": [
        "collaborativeAuthEndpointId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824258",
    "updated_at": "2025-08-04T16:18:34.824258"
  },
  {
    "name": "RemoveCollaborativeAuthorizationEndpoint",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation RemoveCollaborativeAuthorizationEndpoint($input: RemoveCollaborativeAuthorizationEndpointInput!) {\n  removeCollaborativeAuthorizationEndpoint(input: $input) {\n    __typename\n    ... on CollaborativeAuthorizationEndpoint {\n      id\n      name\n      uri\n      createdAt\n      status\n      updatedAt\n      signingKeys {\n        id\n        secret\n      }\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "endpointId": "{{collaborativeAuthEndpointId}}"
        }
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "collaborative_authorization",
      "path": "Consumer Charge/Issuance/Authorization Controls/Collaborative Authorization/Remove Collaborative Authorization Endpoint",
      "description": "",
      "tags": [
        "collaborative_authorization"
      ],
      "requires": [
        "collaborativeAuthEndpointId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824272",
    "updated_at": "2025-08-04T16:18:34.824273"
  },
  {
    "name": "RenameCollaborativeAuthorizationEndpoint",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation RenameCollaborativeAuthorizationEndpoint($input: RenameCollaborativeAuthorizationEndpointInput!) {\n  renameCollaborativeAuthorizationEndpoint(input: $input) {\n    __typename\n    ...on CollaborativeAuthorizationEndpoint {\n      id\n      name\n      uri\n      createdAt\n      status\n      updatedAt\n      signingKeys {\n        id\n        secret\n      }\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "endpointId": "{{collaborativeAuthEndpointId}}",
          "name": "Renamed Collaborative Auth Endpoint"
        }
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "collaborative_authorization",
      "path": "Consumer Charge/Issuance/Authorization Controls/Collaborative Authorization/Rename Collaborative Authorization Endpoint",
      "description": "",
      "tags": [
        "collaborative_authorization"
      ],
      "requires": [
        "collaborativeAuthEndpointId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824287",
    "updated_at": "2025-08-04T16:18:34.824288"
  },
  {
    "name": "SimulateSendToPrinter",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation simulatePhysicalPaymentCardOrderSendToPrinter\n($input: SimulatePhysicalPaymentCardSendToPrinterInput!) {\n  simulatePhysicalPaymentCardOrderSendToPrinter(input: $input) {\n    __typename\n    ...on PhysicalPaymentCardOrder {\n      id\n      orderState {\n        status\n      }\n      paymentCardShipment {\n        courier {\n          method\n          signatureRequiredOnDelivery\n          tracking {\n            trackingNumber\n            actualShipDateLocal\n          }\n        }\n        requestedShipDate\n      }\n      stateHistory {\n        previousStatus\n        newStatus\n        createdAt\n      }\n      paymentCard {\n        id\n      }\n      createdAt\n      updatedAt\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "physicalPaymentCardOrderId": "{{physicalPaymentCardOrderId}}"
        }
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "simulation",
      "path": "Consumer Charge/Physical Card/Simulation/Simulate Send To Printer",
      "description": "",
      "tags": [
        "simulation",
        "simulation"
      ],
      "requires": [
        "physicalPaymentCardOrderId"
      ],
      "produces": [
        "courier",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824310",
    "updated_at": "2025-08-04T16:18:34.824310"
  },
  {
    "name": "SimulateApproval",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation simulatePhysicalPaymentCardOrderApproval($input: SimulatePhysicalPaymentCardApprovalInput!) {\n  simulatePhysicalPaymentCardOrderApproval(input: $input) {\n    __typename\n    ...on PhysicalPaymentCardOrder {\n      id\n      orderState {\n        status\n      }\n      paymentCardShipment {\n        courier {\n          method\n          signatureRequiredOnDelivery\n          tracking {\n            trackingNumber\n            actualShipDateLocal\n          }\n        }\n        requestedShipDate\n      }\n      stateHistory {\n        previousStatus\n        newStatus\n        createdAt\n      }\n      paymentCard {\n        id\n      }\n      createdAt\n      updatedAt\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "physicalPaymentCardOrderId": "{{physicalPaymentCardOrderId}}"
        }
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "simulation",
      "path": "Consumer Charge/Physical Card/Simulation/Simulate Approval",
      "description": "",
      "tags": [
        "simulation",
        "simulation"
      ],
      "requires": [
        "physicalPaymentCardOrderId"
      ],
      "produces": [
        "courier",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824367",
    "updated_at": "2025-08-04T16:18:34.824368"
  },
  {
    "name": "SimulateShipmentFailed",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation simulatePhysicalPaymentCardOrderShipmentFailed($input: SimulatePhysicalPaymentCardShipmentFailedInput!) {\n  simulatePhysicalPaymentCardOrderShipmentFailed(input: $input) {\n    __typename\n    ...on PhysicalPaymentCardOrder {\n      id\n      orderState {\n        status\n      }\n      paymentCardShipment {\n        courier {\n          method\n          signatureRequiredOnDelivery\n          tracking {\n            trackingNumber\n            actualShipDateLocal\n          }\n        }\n        requestedShipDate\n      }\n      stateHistory {\n        previousStatus\n        newStatus\n        createdAt\n      }\n      paymentCard {\n        id\n      }\n      createdAt\n      updatedAt\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "physicalPaymentCardOrderId": "{{physicalPaymentCardOrderId}}"
        }
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "simulation",
      "path": "Consumer Charge/Physical Card/Simulation/Simulate Shipment Failed",
      "description": "",
      "tags": [
        "simulation",
        "simulation"
      ],
      "requires": [
        "physicalPaymentCardOrderId"
      ],
      "produces": [
        "courier",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824384",
    "updated_at": "2025-08-04T16:18:34.824385"
  },
  {
    "name": "SimulateShipped",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation simulatePhysicalPaymentCardOrderShipped\n($input: SimulatePhysicalPaymentCardShippedInput!) {\n  simulatePhysicalPaymentCardOrderShipped(input: $input) {\n    __typename\n    ...on PhysicalPaymentCardOrder {\n      id\n      orderState {\n        status\n      }\n      paymentCardShipment {\n        courier {\n          method\n          signatureRequiredOnDelivery\n          tracking {\n            trackingNumber\n            actualShipDateLocal\n          }\n        }\n        requestedShipDate\n      }\n      stateHistory {\n        previousStatus\n        newStatus\n        createdAt\n      }\n      paymentCard {\n        id\n      }\n      createdAt\n      updatedAt\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "physicalPaymentCardOrderId": "{{physicalPaymentCardOrderId}}",
          "trackingNumber": "{{$guid}}",
          "actualShipDate": "2024-02-12"
        }
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "simulation",
      "path": "Consumer Charge/Physical Card/Simulation/Simulate Shipped",
      "description": "",
      "tags": [
        "simulation",
        "simulation"
      ],
      "requires": [
        "physicalPaymentCardOrderId"
      ],
      "produces": [
        "courier",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824402",
    "updated_at": "2025-08-04T16:18:34.824403"
  },
  {
    "name": "OrderPhysicalPaymentCard",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation OrderPhysicalPaymentCard($input: OrderPhysicalPaymentCardInput!) {\n  orderPhysicalPaymentCard(input: $input) {\n    __typename\n    ...on PhysicalPaymentCardOrder {\n      id\n      orderState {\n        status\n      }\n      paymentCardShipment {\n        courier {\n          method\n          signatureRequiredOnDelivery\n          tracking {\n            trackingNumber\n            actualShipDateLocal\n          }\n        }\n        requestedShipDate\n      }\n      stateHistory {\n        previousStatus\n        newStatus\n        createdAt\n      }\n      paymentCard {\n        id\n      }\n      createdAt\n      updatedAt\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "paymentCardId": "{{paymentCardId}}",
          "deliveryDetails": {
            "name": {
              "givenName": "John",
              "middleName": "D",
              "familyName": "Doe"
            },
            "companyName": "Highnote",
            "address": {
              "streetAddress": "123 Main St",
              "extendedAddress": "",
              "postalCode": "60654",
              "locality": "Chicago",
              "region": "IL",
              "countryCodeAlpha3": "USA"
            }
          },
          "requestedShipDate": "2021-08-20",
          "courier": {
            "method": "UPS_GROUND",
            "signatureRequiredOnDelivery": false
          },
          "cardPersonalization": {
            "textLines": {
              "line1": "John Doe"
            }
          }
        }
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "physical_card",
      "path": "Consumer Charge/Physical Card/Order Physical Payment Card",
      "description": "",
      "tags": [
        "physical_card"
      ],
      "requires": [
        "paymentCardId"
      ],
      "produces": [
        "courier",
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824431",
    "updated_at": "2025-08-04T16:18:34.824432"
  },
  {
    "name": "FindPhysicalPaymentCardOrder",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query FindPhysicalPaymentCardOrder($id: ID!) {\n  node(id: $id) {\n    ... on PhysicalPaymentCardOrder {\n      id\n      orderState {\n        status\n      }\n      paymentCardShipment {\n        courier {\n          method\n          signatureRequiredOnDelivery\n          tracking {\n            trackingNumber\n            actualShipDateLocal\n          }\n        }\n        requestedShipDate\n      }\n      stateHistory {\n        previousStatus\n        newStatus\n        createdAt\n      }\n      paymentCard {\n        id\n      }\n      createdAt\n      updatedAt\n    }\n  }\n}",
      "variables": {
        "id": "{{physicalPaymentCardOrderId}}"
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "physical_card",
      "path": "Consumer Charge/Physical Card/ Find Physical Payment Card Order",
      "description": "",
      "tags": [
        "physical_card"
      ],
      "requires": [
        "physicalPaymentCardOrderId"
      ],
      "produces": [
        "courier"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824447",
    "updated_at": "2025-08-04T16:18:34.824447"
  },
  {
    "name": "CancelPhysicalPaymentCardOrder",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation CancelPhysicalPaymentCardOrder($input: CancelPhysicalPaymentCardOrderInput!) {\n  cancelPhysicalPaymentCardOrder(input: $input) {\n    __typename\n    ...on PhysicalPaymentCardOrder {\n      id\n      orderState {\n        status\n      }\n      stateHistory {\n        previousStatus\n        newStatus\n        createdAt\n      }\n      paymentCard {\n        id\n      }\n      createdAt\n      updatedAt\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "physicalPaymentCardOrderId": "{{physicalPaymentCardOrderId}}"
        }
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "physical_card",
      "path": "Consumer Charge/Physical Card/Cancel Physical Payment Card Order",
      "description": "",
      "tags": [
        "physical_card"
      ],
      "requires": [
        "physicalPaymentCardOrderId"
      ],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824462",
    "updated_at": "2025-08-04T16:18:34.824463"
  },
  {
    "name": "SimulateDelinquency",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation SimulateBackwardShiftAndAgeCurrentFinancialAccountStatementPeriod($input: SimulateBackwardShiftAndAgeCurrentFinancialAccountStatementPeriodInput!) {\n  simulateBackwardShiftAndAgeCurrentFinancialAccountStatementPeriod(input: $input) {\n    ... on FinancialAccount {\n      id\n      name\n      externalId\n      delinquency {\n        __typename\n        totalAmount {\n          value\n          currencyCode\n        }\n        numberOfCycles\n        totalDaysDelinquent\n        delinquencyStartedOn\n        currentDelinquentCycles {\n          daysDelinquent\n          createdAt\n          updatedAt\n          amount {\n            value\n            currencyCode\n          }\n          totalRepaymentsApplied {\n            value\n            currencyCode\n          }\n          state\n          statement {\n            ... on ConsumerRevolvingCardFinancialAccountStatement {\n              id\n              periodStart\n              periodEnd\n              openedAt\n              closedAt\n              primaryLedger {\n                debitBalance {\n                  value\n                  currencyCode\n                }\n                creditBalance {\n                  value\n                  currencyCode\n                }\n                normalBalance\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "financialAccountId": "FINANCIAL_ACCOUNT_ID",
          "numberOfCyclesToShiftCurrentStatementBackward": 3
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.6.0",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "delinquency",
      "path": "Consumer Charge/Repayment/Delinquency/Simulate Delinquency",
      "description": "",
      "tags": [
        "delinquency",
        "simulation"
      ],
      "requires": [],
      "produces": [
        "debitBalance"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824487",
    "updated_at": "2025-08-04T16:18:34.824488"
  },
  {
    "name": "AddWebhookNotificationTarget",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation AddWebhookNotificationTarget($input: AddWebhookNotificationTargetInput!) {\n  addWebhookNotificationTarget(input: $input) {\n    __typename\n    ...on WebhookNotificationTarget {\n      id\n      name\n      uri\n      subscriptions\n      createdAt\n      status\n      updatedAt\n      signingKeys {\n        id\n        secret\n      }\n    }\n    ...on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "name": "My Target",
          "uri": "<URI>",
          "subscriptions": [
            "PAYMENT_CARD_ACTIVATED",
            "AUTHORIZED_USER_CARD_PRODUCT_APPLICATION_APPROVED",
            "CARD_PRODUCT_APPLICATION_APPROVED",
            "CARD_PRODUCT_APPLICATION_IN_REVIEW",
            "CARD_PRODUCT_APPLICATION_MANUAL_REVIEW",
            "CARD_PRODUCT_APPLICATION_DENIED",
            "CARD_PRODUCT_APPLICATION_CLOSED",
            "PAYMENT_CARD_TRANSACTION_DISPUTE_CASE_STATUS_INITIATED",
            "PAYMENT_CARD_TRANSACTION_CHARGEBACK_PROVISIONAL_CREDIT_ISSUED"
          ]
        }
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "notification_targets",
      "path": "Consumer Charge/Reporting/Notifications/Notification Targets/Add Webhook Notification Target",
      "description": "",
      "tags": [
        "notification_targets",
        "retrieval"
      ],
      "requires": [],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824515",
    "updated_at": "2025-08-04T16:18:34.824515"
  },
  {
    "name": "GetAllWebhookNotificationTargets",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetAllWebhookNotificationTargets($firstTargets: Int, $afterTargets: String) {\n\torganizations {\n\t\tid\n\n\t\twebhookNotificationTargets(first: $firstTargets, after: $afterTargets) {\n\t\t\tpageInfo {\n\t\t\t\thasNextPage\n\t\t\t\thasPreviousPage\n\t\t\t\tstartCursor\n\t\t\t\tendCursor\n\t\t\t}\n\n\t\t\tedges {\n\t\t\t\tcursor\n\t\t\t\tnode {\n\t\t\t\t\t__typename\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tstatus\n\t\t\t\t\tdeactivatedAt\n\t\t\t\t\tsubscriptions\n\n\t\t\t\t\tstatusHistory {\n\t\t\t\t\t\t__typename\n\n\t\t\t\t\t\tpageInfo {\n\t\t\t\t\t\t\thasNextPage\n\t\t\t\t\t\t\thasPreviousPage\n\t\t\t\t\t\t\tstartCursor\n\t\t\t\t\t\t\tendCursor\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tcursor\n\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t__typename\n\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\tcreatedAt\n\t\t\t\t\t\t\t\tnewStatus\n\t\t\t\t\t\t\t\tpreviousStatus\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n",
      "variables": {}
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "notification_targets",
      "path": "Consumer Charge/Reporting/Notifications/Notification Targets/Get All Webhook Notification Targets",
      "description": "",
      "tags": [
        "notification_targets",
        "retrieval"
      ],
      "requires": [],
      "produces": [
        "organizations",
        "pageInfo"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824534",
    "updated_at": "2025-08-04T16:18:34.824534"
  },
  {
    "name": "DeactivateNotificationTarget",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation DeactivateNotificationTarget($input: DeactivateNotificationTargetInput!) {\n\tdeactivateNotificationTarget(input: $input) {\n\t\t... on WebhookNotificationTarget {\n\t\t\tid\n\t\t\tstatus\n\t\t}\n\t}\n}\n",
      "variables": {
        "input": {
          "targetId": "<ID>"
        }
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "notification_targets",
      "path": "Consumer Charge/Reporting/Notifications/Notification Targets/Deactivate Notification Target",
      "description": "",
      "tags": [
        "notification_targets",
        "retrieval",
        "activation"
      ],
      "requires": [],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824546",
    "updated_at": "2025-08-04T16:18:34.824546"
  },
  {
    "name": "ActivateNotificationTarget",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "fragment Target on WebhookNotificationTarget {\n\t__typename\n\tid\n\tname\n\turi\n\tsubscriptions\n\tstatus\n\tcreatedAt\n\tupdatedAt\n\tsigningKeys {\n\t\tid\n\t\tsecret\n\t\tcreatedAt\n\t}\n}\n\nmutation ActivateNotificationTarget($input: ActivateNotificationTargetInput!) {\n\tactivateNotificationTarget(input: $input) {\n\t\t...Target\n\t}\n}\n",
      "variables": {
        "input": {
          "targetId": "<ID>"
        }
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "notification_targets",
      "path": "Consumer Charge/Reporting/Notifications/Notification Targets/Activate Notification Target",
      "description": "",
      "tags": [
        "notification_targets",
        "retrieval",
        "activation"
      ],
      "requires": [],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824558",
    "updated_at": "2025-08-04T16:18:34.824559"
  },
  {
    "name": "GetWebhookNotificationTarget",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetWebhookNotificationTarget($id: ID!) {\n\tnode(id: $id) {\n\t\t__typename\n\t\t... on WebhookNotificationTarget {\n\t\t\tstatus\n\t\t\tid\n\n\t\t\tdeliveryAttempts {\n\t\t\t\t__typename\n\n\t\t\t\tpageInfo {\n\t\t\t\t\thasNextPage\n\t\t\t\t\thasPreviousPage\n\t\t\t\t\tstartCursor\n\t\t\t\t\tendCursor\n\t\t\t\t}\n\n\t\t\t\tedges {\n\t\t\t\t\tcursor\n\n\t\t\t\t\tnode {\n\t\t\t\t\t\t__typename\n\t\t\t\t\t\tid\n\t\t\t\t\t\turi\n\t\t\t\t\t\tresponse {\n\t\t\t\t\t\t\thttpStatusCode\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeliveryAttemptStatus\n\t\t\t\t\t\tcreatedAt\n\t\t\t\t\t\tevent {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tstatusHistory {\n\t\t\t\t__typename\n\t\t\t\t\n\t\t\t\tpageInfo {\n\t\t\t\t\thasNextPage\n\t\t\t\t\thasPreviousPage\n\t\t\t\t\tstartCursor\n\t\t\t\t\tendCursor\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tedges {\n\t\t\t\t\tcursor\n\t\t\t\t\t\n\t\t\t\t\tnode {\n\t\t\t\t\t\t__typename\n\t\t\t\t\t\t\n\t\t\t\t\t\tid\n\t\t\t\t\t\tcreatedAt\n\t\t\t\t\t\tnewStatus\n\t\t\t\t\t\tpreviousStatus\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n",
      "variables": {
        "id": "<ID>"
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "notification_targets",
      "path": "Consumer Charge/Reporting/Notifications/Notification Targets/Get Webhook Notification Target",
      "description": "",
      "tags": [
        "notification_targets",
        "retrieval"
      ],
      "requires": [],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824577",
    "updated_at": "2025-08-04T16:18:34.824578"
  },
  {
    "name": "GetNotificationTargetDeliveryAttempts",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetNotificationTargetDeliveryAttempts($id: ID!, $first: Int, $after: String) {\n  node(id: $id) {\n    __typename\n    ... on WebhookNotificationTarget {\n      id\n      deliveryAttempts(first: $first, after: $after) {\n        __typename\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        edges {\n          cursor\n          node {\n            __typename\n            id\n            uri\n            response {\n\t\t\t\thttpStatusCode\n\t\t\t}\n            deliveryAttemptStatus\n            createdAt\n            event {\n              name\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n}",
      "variables": {
        "id": "WEBHOOK_NOTIFICATION_TARGET_ID"
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "notification_targets",
      "path": "Consumer Charge/Reporting/Notifications/Notification Targets/Get Notification Target Delivery Attempts",
      "description": "",
      "tags": [
        "notification_targets",
        "retrieval"
      ],
      "requires": [],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824594",
    "updated_at": "2025-08-04T16:18:34.824595"
  },
  {
    "name": "AddSubscriptionsToNotificationTarget",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation AddSubscriptionsToNotificationTarget($input: AddSubscriptionsToNotificationTargetInput!) {\n  addSubscriptionsToNotificationTarget(input: $input) {\n    ... on WebhookNotificationTarget {\n      id\n      name\n      subscriptions\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "targetId": "WEBHOOK_NOTIFICATION_TARGET_ID",
          "subscriptions": [
            "ACCOUNT_STATUS_CLOSED"
          ]
        }
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "notification_targets",
      "path": "Consumer Charge/Reporting/Notifications/Notification Targets/Add Subscriptions To Notification Target",
      "description": "",
      "tags": [
        "notification_targets",
        "retrieval"
      ],
      "requires": [],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824608",
    "updated_at": "2025-08-04T16:18:34.824609"
  },
  {
    "name": "RemoveSubscriptionsFromNotificationTarget",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation RemoveSubscriptionsFromNotificationTarget($input: RemoveSubscriptionsFromNotificationTargetInput!) {\n  removeSubscriptionsFromNotificationTarget(input: $input) {\n    ... on WebhookNotificationTarget {\n      id\n      name\n      subscriptions\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "targetId": "WEBHOOK_NOTIFICATION_TARGET_ID",
          "subscriptions": [
            "ACCOUNT_STATUS_CLOSED"
          ]
        }
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "notification_targets",
      "path": "Consumer Charge/Reporting/Notifications/Notification Targets/Remove Subscriptions From Notification Target",
      "description": "",
      "tags": [
        "notification_targets",
        "retrieval"
      ],
      "requires": [],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824623",
    "updated_at": "2025-08-04T16:18:34.824624"
  },
  {
    "name": "GetAllNotificationEvents",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetAllNotificationEvents($after: String, $first: Int) {\n\tnotificationEvents(after: $after, first: $first) {\n\t\tedges {\n\t\t\tnode {\n\t\t\t\t... on NotificationEvent {\n\t\t\t\t\tid\n\t\t\t\t\tcreatedAt\n\t\t\t\t\tname\n\t\t\t\t\tnode {\n                        __typename\n\t\t\t\t\t\t... on PaymentCardTransactionDispute {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tstatus\n\t\t\t\t\t\t\tchargebacks {\n                                id, \n                                status, \n                                dispute {\n                                    id\n                                }, \n                                creditStatus\n                            }\n\t\t\t\t\t\t}\n\t\t\t\t\t\t... on PaymentCardTransactionChargeback {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tcreditStatus\n\t\t\t\t\t\t\tdispute {\n                                id,\n                                status,\n                                amount { \n                                    value\n\t\t\t\t\t\t\t    }\n                            }\n\t\t\t\t\t\t\tcreatedAt\n\t\t\t\t\t\t\tupdatedAt\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
      "variables": {
        "first": 150
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "notification_events",
      "path": "Consumer Charge/Reporting/Notifications/Notification Events/Get All Notification Events",
      "description": "",
      "tags": [
        "notification_events",
        "retrieval"
      ],
      "requires": [],
      "produces": [
        "edges"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824644",
    "updated_at": "2025-08-04T16:18:34.824645"
  },
  {
    "name": "GetNotificationEvent",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetNotificationEvent($id: ID!) {\n\tnode(id: $id) {\n\t\t__typename\n\t\t... on NotificationEvent {\n\t\t\t__typename\n\t\t\tid\n\t\t\tcreatedAt\n\t\t\texpiresAt\n\t\t\tname\n\t\t\tnode {\n\t\t\t\t__typename\n\t\t\t}\n\t\t}\n\t}\n}\n",
      "variables": {
        "id": "<ID>"
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "notification_events",
      "path": "Consumer Charge/Reporting/Notifications/Notification Events/Get Notification Event",
      "description": "",
      "tags": [
        "notification_events",
        "retrieval"
      ],
      "requires": [],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824656",
    "updated_at": "2025-08-04T16:18:34.824657"
  },
  {
    "name": "ReplayNotificationEvent",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation ReplayNotificationEvent($input: ReplayNotificationEventInput!) {\n  replayNotificationEvent(input: $input) {\n    __typename\n    ... on NotificationEvent {\n      __typename\n      id\n\t  createdAt\n\t  expiresAt\n      node {\n        ... on AuthorizationEvent {\n          id\n          approvedAmount {\n            value\n          }\n        }\n      }\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n      }\n    }\n  }\n}\n\n",
      "variables": {
        "input": {
          "notificationEventId": "<ID>"
        }
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "notification_events",
      "path": "Consumer Charge/Reporting/Notifications/Notification Events/Replay Notification Event",
      "description": "",
      "tags": [
        "notification_events"
      ],
      "requires": [],
      "produces": [
        "errors"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824670",
    "updated_at": "2025-08-04T16:18:34.824671"
  },
  {
    "name": "GetDeliveryAttemptsForNotificationEvent",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetDeliveryAttemptsForNotificationEvent($id: ID!, $after: String, $first: Int) {\n\tnode(id: $id) {\n\t\t... on NotificationEvent {\n\t\t\t__typename\n\t\t\tid\n\t\t\tdeliveryAttempts(first: $first, after: $after) {\n\t\t\t\t__typename\n\t\t\t\tpageInfo {\n\t\t\t\t\t__typename\n\t\t\t\t\thasNextPage\n\t\t\t\t\thasPreviousPage\n\t\t\t\t\tstartCursor\n\t\t\t\t\tendCursor\n\t\t\t\t}\n\t\t\t\tedges {\n\t\t\t\t\t__typename\n\t\t\t\t\tcursor\n\t\t\t\t\tnode {\n\t\t\t\t\t\t__typename\n\t\t\t\t\t\tid\n\t\t\t\t\t\tresponse {\n\t\t\t\t\t\t  httpStatusCode\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeliveryAttemptStatus\n\t\t\t\t\t\turi\n\t\t\t\t\t\tcreatedAt\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
      "variables": {
        "id": "<ID>",
        "first": 10
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "notification_events",
      "path": "Consumer Charge/Reporting/Notifications/Notification Events/Get Delivery Attempts For Notification Event",
      "description": "",
      "tags": [
        "notification_events",
        "retrieval"
      ],
      "requires": [],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824686",
    "updated_at": "2025-08-04T16:18:34.824687"
  },
  {
    "name": "GetNotificationEventsFilteredByName",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetNotificationEventsFilteredByName($filterBy: NotificationEventsFilterInput!, $first: Int) {\n\tnotificationEvents(filterBy: $filterBy, first: $first) {\n\t\t__typename\n\t\tpageInfo {\n\t\t\tstartCursor\n\t\t\tendCursor\n\t\t\thasNextPage\n\t\t\thasPreviousPage\n\t\t}\n\t\tedges {\n\t\t\tcursor\n\t\t\t__typename\n\t\t\tnode {\n\t\t\t\t... on NotificationEvent {\n\t\t\t\t\t__typename\n\t\t\t\t\tid\n\t\t\t\t\tcreatedAt\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n",
      "variables": {
        "filterBy": {
          "name": [
            "INTERNAL_TRANSFER_BETWEEN_FINANCIAL_ACCOUNTS_COMPLETED"
          ]
        },
        "first": 20
      }
    },
    "headers": {
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "notification_events",
      "path": "Consumer Charge/Reporting/Notifications/Notification Events/Get Notification Events Filtered By Name",
      "description": "",
      "tags": [
        "notification_events",
        "retrieval"
      ],
      "requires": [],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824702",
    "updated_at": "2025-08-04T16:18:34.824702"
  },
  {
    "name": "InitiateOrganizationReport",
    "program_type": "stellarfi",
    "operation_type": "mutation",
    "graphql": {
      "query": "mutation InitiateOrganizationReport($input: InitiateOrganizationReportInput!) {\n  initiateOrganizationReport(input: $input) {\n    ... on Report {\n      id\n      download {\n        url\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "reportType": "EXPERIAN_CREDIT_REPORT",
          "parameters": {
            "between": {
              "start": "YYYY-MM-DD",
              "end": "YYYY-MM-DD"
            }
          }
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "reports",
      "path": "Consumer Charge/Reporting/Reports/Initiate Organization Report",
      "description": "",
      "tags": [
        "reports"
      ],
      "requires": [],
      "produces": []
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824719",
    "updated_at": "2025-08-04T16:18:34.824720"
  },
  {
    "name": "GetReport",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query GetReport($id: ID!) {\n  node(id: $id) {\n    ... on Report {\n      download {\n        url\n      }\n    }\n  }\n}",
      "variables": {
        "id": "REPORT_ID"
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "reports",
      "path": "Consumer Charge/Reporting/Reports/Get Report",
      "description": "",
      "tags": [
        "reports",
        "retrieval"
      ],
      "requires": [],
      "produces": [
        "download"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824730",
    "updated_at": "2025-08-04T16:18:34.824731"
  },
  {
    "name": "GetReportUsage",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query ReportUsage {\n  reportUsage {\n    limit\n    limitRemaining\n    periodEnd\n    reportType\n  }\n}",
      "variables": {}
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "reports",
      "path": "Consumer Charge/Reporting/Reports/Get Report Usage",
      "description": "",
      "tags": [
        "reports",
        "retrieval"
      ],
      "requires": [],
      "produces": [
        "reportUsage"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824749",
    "updated_at": "2025-08-04T16:18:34.824750"
  },
  {
    "name": "GetReports",
    "program_type": "stellarfi",
    "operation_type": "query",
    "graphql": {
      "query": "query Reports($first: Int, $after: String, $input: ReportFilterInput) {\n  reports(first: $first, after: $after, filterBy: $input) {\n    ... on ReportConnection {\n      edges {\n        ... on ReportEdge {\n          node {\n            __typename\n            id\n            status\n            reportType\n            download {\n              url\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "status": {
            "includes": [
              "COMPLETED"
            ]
          }
        }
      }
    },
    "headers": {
      "User-Agent": "insomnia/8.4.2",
      "Content-Type": "application/json"
    },
    "metadata": {
      "category": "reports",
      "path": "Consumer Charge/Reporting/Reports/Get Reports",
      "description": "",
      "tags": [
        "reports",
        "retrieval"
      ],
      "requires": [],
      "produces": [
        "edges",
        "node"
      ]
    },
    "version": "1.0.0",
    "created_at": "2025-08-04T16:18:34.824763",
    "updated_at": "2025-08-04T16:18:34.824764"
  }
]