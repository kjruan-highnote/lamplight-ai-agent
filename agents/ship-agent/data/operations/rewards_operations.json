{
  "collection": "Rewards",
  "program_type": "rewards",
  "extraction_date": "2025-08-12T17:46:30.882Z",
  "total_operations": 9,
  "categories": [
    {
      "name": "redemption_rule",
      "operations": [
        {
          "name": "CreateRewardRedemptionConfiguration",
          "type": "mutation",
          "required": true
        },
        {
          "name": "AttachRewardRedemptionConfigurationToProduct",
          "type": "mutation",
          "required": false
        },
        {
          "name": "UpdateRewardRedemptionConfigurationAttachment",
          "type": "mutation",
          "required": false
        },
        {
          "name": "RedeemRewardsForStatementCredit",
          "type": "mutation",
          "required": false
        }
      ]
    },
    {
      "name": "earn_rule",
      "operations": [
        {
          "name": "CreateRewardDefaultEarnRule",
          "type": "mutation",
          "required": true
        },
        {
          "name": "CreateRewardMerchantCategoryEarnRule",
          "type": "mutation",
          "required": true
        },
        {
          "name": "AttachRewardEarnRuleToProduct",
          "type": "mutation",
          "required": false
        },
        {
          "name": "UpdateRewardRuleAttachment",
          "type": "mutation",
          "required": false
        },
        {
          "name": "CreateRewardPointsAdjustment",
          "type": "mutation",
          "required": true
        }
      ]
    }
  ],
  "operations": [
    {
      "name": "CreateRewardRedemptionConfiguration",
      "type": "mutation",
      "required": true,
      "category": "redemption_rule",
      "graphql": "mutation CreateRewardRedemptionConfiguration($input: CreateRewardRedemptionConfigurationInput!) {\n  createRewardRedemptionConfiguration(input: $input) {\n    ... on RewardRedemptionConfiguration {\n      id\n      name\n      createdAt\n      type\n      updatedAt\n      rewardPointRedemption {\n        rate\n      }\n      attachments {\n        edges {\n          node {\n            ... on RewardRedemptionConfigurationProductAttachment {\n              id\n              cardProduct {\n                id\n                name\n              }\n              effectiveFrom\n              effectiveThrough\n            }\n          }\n        }\n      }\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n        errorPath\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "name": "REDEMPTION_RULE_NAME",
          "rewardPointRedemption": {
            "rate": "1.0"
          }
        }
      }
    },
    {
      "name": "AttachRewardRedemptionConfigurationToProduct",
      "type": "mutation",
      "required": false,
      "category": "redemption_rule",
      "graphql": "mutation AttachRewardRedemptionConfigurationToProduct($input: AttachRewardRedemptionConfigurationToProductInput!) {\n  attachRewardRedemptionConfigurationToProduct(input: $input) {\n    ... on RewardRedemptionConfigurationProductAttachment {\n      id\n      cardProduct {\n        id\n        name\n      }\n      effectiveFrom\n      effectiveThrough\n      redemptionConfiguration {\n        id\n        name\n        type\n        rewardPointRedemption {\n          rate\n        }\n        updatedAt\n        createdAt\n      }\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n        errorPath\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": "{\n  \"input\": {\n    \"cardProductId\": \"CARD_PRODUCT_ID\",\n    // \"effectiveFrom\": null,\n    // \"effectiveThrough\": null,\n    \"redemptionConfiguration\": {\n      \"id\": \"REDEMPTION_RULE_ID\"\n    }\n  }\n}"
    },
    {
      "name": "UpdateRewardRedemptionConfigurationAttachment",
      "type": "mutation",
      "required": false,
      "category": "redemption_rule",
      "graphql": "mutation UpdateRewardRedemptionConfigurationAttachment($input: UpdateRewardRedemptionConfigurationAttachmentInput!) {\n  updateRewardRedemptionConfigurationAttachment(input: $input) {\n    ... on RewardRedemptionConfigurationProductAttachment {\n      id\n      effectiveFrom\n      effectiveThrough\n      cardProduct {\n        id\n        name\n      }\n      redemptionConfiguration {\n        id\n        name\n        rewardPointRedemption {\n          rate\n        }\n        type\n        createdAt\n        updatedAt\n      }\n    }\n  }\n}",
      "variables": {
        "input": {
          "attachmentId": "REDEMPTION_RULE_CONFIGURATION_ID",
          "effectiveThrough": "UPDATED_DATE"
        }
      }
    },
    {
      "name": "RedeemRewardsForStatementCredit",
      "type": "mutation",
      "required": false,
      "category": "redemption_rule",
      "graphql": "mutation RedeemRewardsForStatementCredit($input: RedeemRewardsForStatementCreditInput!) {\n  redeemRewardsForStatementCredit(input: $input) {\n    ... on RewardPointsTransfer {\n      id\n      memo\n      activity\n      externalTransactionIdentifier\n      redemptionConfiguration {\n        id\n        name\n      }\n      rewardEarnRule {\n        __typename\n        id\n        name\n      }\n      rewardPointsAmount {\n        value\n        currencyCode\n        decimalPlaces\n      }\n      rewardPointsValue {\n        value\n        currencyCode\n        decimalPlaces\n      }\n      source\n      status {\n        ... on RewardPointsTransferSuccessStatus {\n          status\n        }\n        ... on RewardPointsTransferFailureStatus {\n          status\n          statusReasonCode\n        }\n      }\n      createdAt\n      updatedAt\n    }\n  }\n}",
      "variables": {
        "input": {
          "financialAccountId": "FINANCIAL_ACCOUNT_ID",
          "memo": "MEMO",
          "externalTransactionIdentifier": "EXTERNAL_ID",
          "redemption": {
            "pointsToRedeem": 100,
            "redemptionConfigurationId": "REDEMPTION_RULE_CONFIGURATION_ID"
          }
        }
      }
    },
    {
      "name": "CreateRewardDefaultEarnRule",
      "type": "mutation",
      "required": true,
      "category": "earn_rule",
      "graphql": "mutation CreateRewardDefaultEarnRule($input: CreateRewardDefaultEarnRuleInput!) {\n  createRewardDefaultEarnRule(input: $input) {\n    ... on RewardDefaultEarnRule {\n      id\n      name\n      createdAt\n      updatedAt\n      type\n      rewardPointEarning {\n        rate\n      }\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n        errorPath\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "name": "REDEMPTION_RULE_NAME",
          "rewardPointRedemption": {
            "rate": "1.0"
          }
        }
      }
    },
    {
      "name": "CreateRewardMerchantCategoryEarnRule",
      "type": "mutation",
      "required": true,
      "category": "earn_rule",
      "graphql": "mutation CreateRewardMerchantCategoryEarnRule($input: CreateRewardMerchantCategoryEarnRuleInput!) {\n  createRewardMerchantCategoryEarnRule(input: $input) {\n    ... on RewardMerchantCategoryEarnRule {\n      id\n      name\n      createdAt\n      updatedAt\n      type\n      rewardPointEarning {\n        rate\n      }\n      allowedList\n      allowedListCodes\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n        errorPath\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "name": "RULE_NAME",
          "rewardPointEarning": {
            "rate": 1
          },
          "allowedList": [
            "MCC_1"
          ]
        }
      }
    },
    {
      "name": "AttachRewardEarnRuleToProduct",
      "type": "mutation",
      "required": false,
      "category": "earn_rule",
      "graphql": "mutation AttachRewardEarnRuleToProduct($input: AttachRewardEarnRuleToProductInput!) {\n  attachRewardEarnRuleToProduct(input: $input) {\n    ... on RewardRuleProductAttachment {\n      id\n      rewardEarnRule {\n        id\n        name\n        attachments {\n          edges {\n            node {\n              id\n              ... on RewardRuleProductAttachment {\n                cardProduct {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n      effectiveFrom\n      effectiveThrough\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n        errorPath\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "cardProductId": "{{cardProductId}}",
          "effectiveFrom": "",
          "effectiveThrough": "",
          "rewardRule": {
            "id": "{{rewardReuleId}}"
          }
        }
      }
    },
    {
      "name": "UpdateRewardRuleAttachment",
      "type": "mutation",
      "required": false,
      "category": "earn_rule",
      "graphql": "mutation UpdateRewardRuleAttachment($input: UpdateRewardRuleAttachmentInput!) {\n  updateRewardRuleAttachment(input: $input) {\n    ... on RewardRuleProductAttachment {\n      id\n      rewardEarnRule {\n        id\n      }\n      effectiveFrom\n      effectiveThrough\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n        errorPath\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "attachmentId": "{{ruleAttachmentId}}",
          "effectiveThrough": ""
        }
      }
    },
    {
      "name": "CreateRewardPointsAdjustment",
      "type": "mutation",
      "required": true,
      "category": "earn_rule",
      "graphql": "mutation CreateRewardPointsAdjustment($input: CreateRewardPointsAdjustmentInput!) {\n  createRewardPointsAdjustment(input: $input) {\n    __typename\n    ... on RewardPointsTransfer {\n      id\n      rewardPointsValue {\n        currencyCode\n        value\n      }\n      rewardPointsAmount {\n        currencyCode\n        value\n      }\n      createdAt\n      updatedAt\n      ledgers {\n        name\n      }\n      status {\n        ... on RewardPointsTransferSuccessStatus {\n          status\n        }\n        ... on RewardPointsTransferFailureStatus {\n          status\n          statusReasonCode\n        }\n      }\n      activity\n      memo\n    }\n    ... on UserError {\n      errors {\n        path\n        code\n        description\n        errorPath\n      }\n    }\n    ... on AccessDeniedError {\n      message\n    }\n  }\n}",
      "variables": {
        "input": {
          "financialAccountId": "{{financialAccountId}}",
          "activity": "AWARD",
          "pointsToAdjust": 100,
          "memo": "memo"
        }
      }
    }
  ]
}