# GCP Schema Agent Environment Configuration
# Copy this file to .env and update with your actual values

# =============================================================================
# GENERAL GCP CONFIGURATION
# =============================================================================

# Your GCP Project ID (required)
GCP_PROJECT_ID=your-gcp-project-id

# GCP Region for deployments
GCP_REGION=us-central1

# GCP Zone for GKE deployments
GCP_ZONE=us-central1-a

# Service name used across deployments
SERVICE_NAME=schema-agent

# =============================================================================
# CLOUD STORAGE CONFIGURATION (setup-storage.sh)
# =============================================================================

# Cloud Storage bucket name for data storage
STORAGE_BUCKET_NAME=your-project-schema-agent-data

# Service account name for the application
SERVICE_ACCOUNT_NAME=schema-agent-sa

# =============================================================================
# CLOUD SCHEDULER CONFIGURATION (deploy-cloud-scheduler.sh)
# =============================================================================

# Cron schedule for automated updates (every 6 hours by default)
CRON_SCHEDULE=0 */6 * * *

# Timezone for the scheduler
SCHEDULE_TIMEZONE=UTC

# Cloud Function name for schema updates
CLOUD_FUNCTION_NAME=schema-updater

# Cloud Scheduler job name
SCHEDULER_JOB_NAME=schema-update-job

# Pub/Sub topic name for triggering updates
PUBSUB_TOPIC_NAME=schema-updates

# Storage bucket for the function (defaults to ${PROJECT_ID}-schema-agent-data)
STORAGE_BUCKET=your-project-schema-agent-data

# GraphQL endpoint URL (required for schema updates)
GRAPHQL_ENDPOINT=https://api.example.com/graphql

# GraphQL authentication token (required)
GRAPHQL_TOKEN=your-graphql-token-here

# =============================================================================
# GOOGLE KUBERNETES ENGINE (GKE) CONFIGURATION (deploy-gke.sh)
# =============================================================================

# GKE cluster name
GKE_CLUSTER_NAME=schema-agent-cluster

# Machine type for GKE nodes
MACHINE_TYPE=e2-standard-2

# Number of nodes in the cluster
NUM_NODES=2

# Minimum nodes for autoscaling
MIN_NODES=1

# Maximum nodes for autoscaling
MAX_NODES=5

# Disk size for nodes
DISK_SIZE=20GB

# Directory containing Kubernetes manifests
KUBERNETES_MANIFESTS_DIR=gcp/kubernetes

# =============================================================================
# CLOUD RUN CONFIGURATION (deploy-cloud-run.sh)
# =============================================================================

# Memory allocation for Cloud Run instances
MEMORY=2Gi

# CPU allocation for Cloud Run instances
CPU=1

# Request timeout for Cloud Run
TIMEOUT=300s

# Maximum number of instances
MAX_INSTANCES=10

# Minimum number of instances (0 for serverless)
MIN_INSTANCES=0

# Concurrency per instance
CONCURRENCY=80

# Service port
PORT=8000

# Allow unauthenticated access to Cloud Run service
ALLOW_UNAUTH=true

# Application host binding
HOST=0.0.0.0

# Enable API authentication within the application
ENABLE_AUTH=false

# CORS allowed origins
ALLOWED_ORIGINS=*

# =============================================================================
# OPTIONAL CONFIGURATION
# =============================================================================

# Additional environment variables for the application
# EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
# CHUNK_SIZE=500
# CHUNK_OVERLAP=50
# TOP_K=5
# SIMILARITY_THRESHOLD=0.7

# =============================================================================
# USAGE INSTRUCTIONS
# =============================================================================
#
# 1. Copy this file to .env:
#    cp .env.example .env
#
# 2. Update the values above with your actual configuration
#
# 3. Source the environment file before running scripts:
#    source .env
#    ./deploy-cloud-run.sh
#
# 4. Or export specific variables:
#    export GCP_PROJECT_ID=my-project
#    export GCP_REGION=us-west1
#    ./deploy-cloud-run.sh
#
# 5. You can also pass values as command line arguments:
#    ./deploy-cloud-run.sh my-project us-west1
#
# Note: Command line arguments take precedence over environment variables